{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.10"},"colab":{"name":"FinRL_portfolio_allocation_NeurIPS_2020.ipynb adlı not defterinin kopyası","provenance":[{"file_id":"https://github.com/AI4Finance-LLC/FinRL/blob/master/FinRL_portfolio_allocation_NeurIPS_2020.ipynb","timestamp":1628261400057}],"collapsed_sections":["lvrqTro3lhAh","a3Iuv554xYFH","SPEXBcm-uBJo","iidB5E27dfzh"]},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"Yv3IDvrobU37"},"source":["# Deep Reinforcement Learning for Stock Trading from Scratch: Portfolio Allocation\n","\n","Tutorials to use OpenAI DRL to perform portfolio allocation in one Jupyter Notebook | Presented at NeurIPS 2020: Deep RL Workshop\n","\n","* This blog is based on our paper: FinRL: A Deep Reinforcement Learning Library for Automated Stock Trading in Quantitative Finance, presented at NeurIPS 2020: Deep RL Workshop.\n","* Check out medium blog for detailed explanations: \n","* Please report any issues to our Github: https://github.com/AI4Finance-LLC/FinRL-Library/issues\n","* **Pytorch Version** \n","\n"]},{"cell_type":"markdown","metadata":{"id":"4kHCfEiTA80V"},"source":["# Content"]},{"cell_type":"markdown","metadata":{"id":"vUmLTmoQA7_w"},"source":["* [1. Problem Definition](#0)\n","* [2. Getting Started - Load Python packages](#1)\n","    * [2.1. Install Packages](#1.1)    \n","    * [2.2. Check Additional Packages](#1.2)\n","    * [2.3. Import Packages](#1.3)\n","    * [2.4. Create Folders](#1.4)\n","* [3. Download Data](#2)\n","* [4. Preprocess Data](#3)        \n","    * [4.1. Technical Indicators](#3.1)\n","    * [4.2. Perform Feature Engineering](#3.2)\n","* [5.Build Environment](#4)  \n","    * [5.1. Training & Trade Data Split](#4.1)\n","    * [5.2. User-defined Environment](#4.2)   \n","    * [5.3. Initialize Environment](#4.3)    \n","* [6.Implement DRL Algorithms](#5)  \n","* [7.Backtesting Performance](#6)  \n","    * [7.1. BackTestStats](#6.1)\n","    * [7.2. BackTestPlot](#6.2)   \n","    * [7.3. Baseline Stats](#6.3)   \n","    * [7.3. Compare to Stock Market Index](#6.4)             "]},{"cell_type":"markdown","metadata":{"id":"12v1i0jVkg48"},"source":["<a id='0'></a>\n","# Part 1. Problem Definition"]},{"cell_type":"markdown","metadata":{"id":"g_emqQCCklVt"},"source":["<a id='1'></a>\n","# Part 2. Getting Started- Load Python Packages"]},{"cell_type":"markdown","metadata":{"id":"cVCcCalAknGn"},"source":["<a id='1.1'></a>\n","## 2.1. Install all the packages through FinRL library\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pT8a0fvhA_TW","executionInfo":{"status":"ok","timestamp":1628260862218,"user_tz":-180,"elapsed":20743,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"e0e365f0-fa71-4c62-915d-56ad186a01c5"},"source":["## install finrl library\n","!pip install git+https://github.com/AI4Finance-LLC/FinRL-Library.git"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting git+https://github.com/AI4Finance-LLC/FinRL-Library.git\n","  Cloning https://github.com/AI4Finance-LLC/FinRL-Library.git to /tmp/pip-req-build-tm2yf2de\n","  Running command git clone -q https://github.com/AI4Finance-LLC/FinRL-Library.git /tmp/pip-req-build-tm2yf2de\n","Collecting pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2\n","  Cloning https://github.com/quantopian/pyfolio.git to /tmp/pip-install-izoy67p2/pyfolio_9f67430712474067866ddb7bb224dee0\n","  Running command git clone -q https://github.com/quantopian/pyfolio.git /tmp/pip-install-izoy67p2/pyfolio_9f67430712474067866ddb7bb224dee0\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (1.19.5)\n","Requirement already satisfied: pandas>=1.1.5 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (1.1.5)\n","Collecting stockstats\n","  Downloading stockstats-0.3.2-py2.py3-none-any.whl (13 kB)\n","Collecting yfinance\n","  Downloading yfinance-0.1.63.tar.gz (26 kB)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (3.2.2)\n","Requirement already satisfied: scikit-learn>=0.21.0 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (0.22.2.post1)\n","Requirement already satisfied: gym>=0.17 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (0.17.3)\n","Collecting stable-baselines3[extra]\n","  Downloading stable_baselines3-1.1.0-py3-none-any.whl (172 kB)\n","\u001b[K     |████████████████████████████████| 172 kB 8.8 MB/s \n","\u001b[?25hRequirement already satisfied: pytest in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (3.6.4)\n","Requirement already satisfied: setuptools>=41.4.0 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (57.2.0)\n","Requirement already satisfied: wheel>=0.33.6 in /usr/local/lib/python3.7/dist-packages (from finrl==0.3.0) (0.36.2)\n","Requirement already satisfied: ipython>=3.2.3 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (5.5.0)\n","Requirement already satisfied: pytz>=2014.10 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (2018.9)\n","Requirement already satisfied: scipy>=0.14.0 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (1.4.1)\n","Requirement already satisfied: seaborn>=0.7.1 in /usr/local/lib/python3.7/dist-packages (from pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.11.1)\n","Collecting empyrical>=0.5.0\n","  Downloading empyrical-0.5.5.tar.gz (52 kB)\n","\u001b[K     |████████████████████████████████| 52 kB 1.8 MB/s \n","\u001b[?25hRequirement already satisfied: pandas-datareader>=0.2 in /usr/local/lib/python3.7/dist-packages (from empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.9.0)\n","Requirement already satisfied: pyglet<=1.5.0,>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from gym>=0.17->finrl==0.3.0) (1.5.0)\n","Requirement already satisfied: cloudpickle<1.7.0,>=1.2.0 in /usr/local/lib/python3.7/dist-packages (from gym>=0.17->finrl==0.3.0) (1.3.0)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.7.5)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (4.4.2)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (1.0.18)\n","Requirement already satisfied: pexpect in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (4.8.0)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.8.1)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (2.6.1)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.7/dist-packages (from ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (5.0.5)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.0) (1.3.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.0) (2.4.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.0) (0.10.0)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->finrl==0.3.0) (2.8.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from cycler>=0.10->matplotlib->finrl==0.3.0) (1.15.0)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.7/dist-packages (from pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (2.23.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (4.2.6)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from prompt-toolkit<2.0.0,>=1.0.4->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.2.5)\n","Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from pyglet<=1.5.0,>=1.4.0->gym>=0.17->finrl==0.3.0) (0.16.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (2021.5.30)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.19.0->pandas-datareader>=0.2->empyrical>=0.5.0->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (1.24.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.0->finrl==0.3.0) (1.0.1)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.7/dist-packages (from traitlets>=4.2->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.2.0)\n","Requirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.7/dist-packages (from pexpect->ipython>=3.2.3->pyfolio@ git+https://github.com/quantopian/pyfolio.git#egg=pyfolio-0.9.2->finrl==0.3.0) (0.7.0)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.0) (21.2.0)\n","Requirement already satisfied: atomicwrites>=1.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.0) (1.4.0)\n","Requirement already satisfied: more-itertools>=4.0.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.0) (8.8.0)\n","Requirement already satisfied: pluggy<0.8,>=0.5 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.0) (0.7.1)\n","Requirement already satisfied: py>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from pytest->finrl==0.3.0) (1.10.0)\n","Requirement already satisfied: torch>=1.4.0 in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (1.9.0+cu102)\n","Requirement already satisfied: tensorboard>=2.2.0 in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (2.5.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (7.1.2)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (5.4.8)\n","Requirement already satisfied: opencv-python in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (4.1.2.30)\n","Requirement already satisfied: atari-py~=0.2.0 in /usr/local/lib/python3.7/dist-packages (from stable-baselines3[extra]->finrl==0.3.0) (0.2.9)\n","Requirement already satisfied: protobuf>=3.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (3.17.3)\n","Requirement already satisfied: absl-py>=0.4 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (0.12.0)\n","Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (0.4.4)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (3.3.4)\n","Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (1.32.1)\n","Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (0.6.1)\n","Requirement already satisfied: grpcio>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (1.34.1)\n","Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (1.8.0)\n","Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (4.2.2)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (4.7.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<2,>=1.6.3->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (0.2.8)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (1.3.0)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (4.6.1)\n","Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (0.4.8)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (3.1.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.4.0->stable-baselines3[extra]->finrl==0.3.0) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->markdown>=2.6.8->tensorboard>=2.2.0->stable-baselines3[extra]->finrl==0.3.0) (3.5.0)\n","Collecting int-date>=0.1.7\n","  Downloading int_date-0.1.8-py2.py3-none-any.whl (5.0 kB)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from yfinance->finrl==0.3.0) (0.0.9)\n","Collecting lxml\n","  Downloading lxml-4.6.3-cp37-cp37m-manylinux2014_x86_64.whl (6.3 MB)\n","\u001b[K     |████████████████████████████████| 6.3 MB 53.9 MB/s \n","\u001b[?25hBuilding wheels for collected packages: finrl, pyfolio, empyrical, yfinance\n","  Building wheel for finrl (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for finrl: filename=finrl-0.3.0-py3-none-any.whl size=62457 sha256=81b5e767842a11a3dc97a51fbc7d889279f67007c44c9f8eae619e2b0548e9ff\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-tt4zue8m/wheels/17/ff/bd/1bc602a0352762b0b24041b88536d803ae343ed0a711fcf55e\n","  Building wheel for pyfolio (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyfolio: filename=pyfolio-0.9.2+75.g4b901f6-py3-none-any.whl size=75773 sha256=41c1fd6e1263fb1a78de4b922fedbcb9ca9de9032f9059cdec4535c610074f28\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-tt4zue8m/wheels/ef/09/e5/2c1bf37c050d22557c080deb1be986d06424627c04aeca19b9\n","  Building wheel for empyrical (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for empyrical: filename=empyrical-0.5.5-py3-none-any.whl size=39779 sha256=eabd33596346f9a1cf2ed2441206f226c04bb367229039b63d8acc675a395b29\n","  Stored in directory: /root/.cache/pip/wheels/d9/91/4b/654fcff57477efcf149eaca236da2fce991526cbab431bf312\n","  Building wheel for yfinance (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for yfinance: filename=yfinance-0.1.63-py2.py3-none-any.whl size=23919 sha256=9e5b9cc5ae687d5f68c13f44abe9cd3c2a75bf1db5800dac2fbf0ded6a8738cb\n","  Stored in directory: /root/.cache/pip/wheels/fe/87/8b/7ec24486e001d3926537f5f7801f57a74d181be25b11157983\n","Successfully built finrl pyfolio empyrical yfinance\n","Installing collected packages: lxml, stable-baselines3, int-date, empyrical, yfinance, stockstats, pyfolio, finrl\n","  Attempting uninstall: lxml\n","    Found existing installation: lxml 4.2.6\n","    Uninstalling lxml-4.2.6:\n","      Successfully uninstalled lxml-4.2.6\n","Successfully installed empyrical-0.5.5 finrl-0.3.0 int-date-0.1.8 lxml-4.6.3 pyfolio-0.9.2+75.g4b901f6 stable-baselines3-1.1.0 stockstats-0.3.2 yfinance-0.1.63\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bNmvYN9YbU4B"},"source":["<a id='1.3'></a>\n","## 2.3. Import Packages"]},{"cell_type":"code","metadata":{"id":"ntfTb0e2bU4C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628260868055,"user_tz":-180,"elapsed":5842,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"78377d93-002b-4ef4-8091-7ffef39a33ca"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib\n","import matplotlib.pyplot as plt\n","matplotlib.use('Agg')\n","%matplotlib inline\n","import datetime\n","\n","from finrl.apps import config\n","from finrl.neo_finrl.preprocessor.yahoodownloader import YahooDownloader\n","from finrl.neo_finrl.preprocessor.preprocessors import FeatureEngineer, data_split\n","from finrl.neo_finrl.env_portfolio_allocation.env_portfolio import StockPortfolioEnv\n","from finrl.drl_agents.stablebaselines3.models import DRLAgent\n","from finrl.plot import backtest_stats, backtest_plot, get_daily_return, get_baseline,convert_daily_return_to_pyfolio_ts\n","\n","\n","import sys\n","sys.path.append(\"../FinRL-Library\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/pyfolio/pos.py:27: UserWarning: Module \"zipline.assets\" not found; multipliers will not be applied to position notionals.\n","  'Module \"zipline.assets\" not found; multipliers will not be applied'\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"OlIS2abxkwan"},"source":["<a id='1.4'></a>\n","## 2.4. Create Folders"]},{"cell_type":"code","metadata":{"id":"B8bBq7nsBCfF","executionInfo":{"status":"ok","timestamp":1628260876381,"user_tz":-180,"elapsed":407,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["import os\n","if not os.path.exists(\"./\" + config.DATA_SAVE_DIR):\n","    os.makedirs(\"./\" + config.DATA_SAVE_DIR)\n","if not os.path.exists(\"./\" + config.TRAINED_MODEL_DIR):\n","    os.makedirs(\"./\" + config.TRAINED_MODEL_DIR)\n","if not os.path.exists(\"./\" + config.TENSORBOARD_LOG_DIR):\n","    os.makedirs(\"./\" + config.TENSORBOARD_LOG_DIR)\n","if not os.path.exists(\"./\" + config.RESULTS_DIR):\n","    os.makedirs(\"./\" + config.RESULTS_DIR)"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"slBria_QbU4F"},"source":["<a id='2'></a>\n","# Part 3. Download Data\n","Yahoo Finance is a website that provides stock data, financial news, financial reports, etc. All the data provided by Yahoo Finance is free.\n","* FinRL uses a class **YahooDownloader** to fetch data from Yahoo Finance API\n","* Call Limit: Using the Public API (without authentication), you are limited to 2,000 requests per hour per IP (or up to a total of 48,000 requests a day).\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CPsuy6d9yRPp","executionInfo":{"status":"ok","timestamp":1628260880418,"user_tz":-180,"elapsed":967,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"39eb7851-c977-4b89-9786-f636e48c2086"},"source":["print(config.DOW_30_TICKER)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["['AAPL', 'MSFT', 'JPM', 'V', 'RTX', 'PG', 'GS', 'NKE', 'DIS', 'AXP', 'HD', 'INTC', 'WMT', 'IBM', 'MRK', 'UNH', 'KO', 'CAT', 'TRV', 'JNJ', 'CVX', 'MCD', 'VZ', 'CSCO', 'XOM', 'BA', 'MMM', 'PFE', 'WBA', 'DD']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WEwzMkFHbU4G","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628260892261,"user_tz":-180,"elapsed":10394,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"66b31b9f-e432-4fbc-9a4d-e8aaa86f0fd1"},"source":["df = YahooDownloader(start_date = '2008-01-01',\n","                     end_date = '2021-07-01',\n","                     ticker_list = config.DOW_30_TICKER).fetch_data()"],"execution_count":5,"outputs":[{"output_type":"stream","text":["[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","[*********************100%***********************]  1 of 1 completed\n","Shape of DataFrame:  (101887, 8)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"V1xC-LpbbU4f","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1628260892263,"user_tz":-180,"elapsed":19,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"d772a032-9623-47de-f9d0-4fbc459f2328"},"source":["df.head()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-01-02</td>\n","      <td>7.116786</td>\n","      <td>7.152143</td>\n","      <td>6.876786</td>\n","      <td>5.983694</td>\n","      <td>1079178800</td>\n","      <td>AAPL</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-01-02</td>\n","      <td>52.090000</td>\n","      <td>52.320000</td>\n","      <td>50.790001</td>\n","      <td>40.795723</td>\n","      <td>8053700</td>\n","      <td>AXP</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-01-02</td>\n","      <td>87.570000</td>\n","      <td>87.839996</td>\n","      <td>86.000000</td>\n","      <td>63.481632</td>\n","      <td>4303000</td>\n","      <td>BA</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-01-02</td>\n","      <td>72.559998</td>\n","      <td>72.669998</td>\n","      <td>70.050003</td>\n","      <td>47.896084</td>\n","      <td>6337800</td>\n","      <td>CAT</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-01-02</td>\n","      <td>27.000000</td>\n","      <td>27.299999</td>\n","      <td>26.209999</td>\n","      <td>19.569740</td>\n","      <td>64338900</td>\n","      <td>CSCO</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date       open       high  ...      volume   tic  day\n","0  2008-01-02   7.116786   7.152143  ...  1079178800  AAPL    2\n","1  2008-01-02  52.090000  52.320000  ...     8053700   AXP    2\n","2  2008-01-02  87.570000  87.839996  ...     4303000    BA    2\n","3  2008-01-02  72.559998  72.669998  ...     6337800   CAT    2\n","4  2008-01-02  27.000000  27.299999  ...    64338900  CSCO    2\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"mS1-nxRzbU4i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628260892264,"user_tz":-180,"elapsed":15,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"0eef4ca1-6e89-49ac-acb5-ff20a4bcea6f"},"source":["df.shape"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(101887, 8)"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"V9UwKwzRbU4l"},"source":["# Part 4: Preprocess Data\n","Data preprocessing is a crucial step for training a high quality machine learning model. We need to check for missing data and do feature engineering in order to convert the data into a model-ready state.\n","* Add technical indicators. In practical trading, various information needs to be taken into account, for example the historical stock prices, current holding shares, technical indicators, etc. In this article, we demonstrate two trend-following technical indicators: MACD and RSI.\n","* Add turbulence index. Risk-aversion reflects whether an investor will choose to preserve the capital. It also influences one's trading strategy when facing different market volatility level. To control the risk in a worst-case scenario, such as financial crisis of 2007–2008, FinRL employs the financial turbulence index that measures extreme asset price fluctuation."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P5h8RbeBHMDQ","executionInfo":{"status":"ok","timestamp":1628260934035,"user_tz":-180,"elapsed":41219,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"ee4148ee-22bc-492a-9b50-e54a817a9d26"},"source":["fe = FeatureEngineer(\n","                    use_technical_indicator=True,\n","                    use_turbulence=False,\n","                    user_defined_feature = False)\n","\n","df = fe.preprocess_data(df)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["Successfully added technical indicators\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_zsIW1LAiqCb","executionInfo":{"status":"ok","timestamp":1628260934036,"user_tz":-180,"elapsed":27,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"e8d85377-d1f1-417a-cb90-31431dd6d109"},"source":["df.shape"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(98542, 12)"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"lWB-RoTSbU4s","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1628260934038,"user_tz":-180,"elapsed":25,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"a719642a-dd33-427f-80c1-203e798769ef"},"source":["df.head()"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","      <th>macd</th>\n","      <th>rsi_30</th>\n","      <th>cci_30</th>\n","      <th>dx_30</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-01-02</td>\n","      <td>7.116786</td>\n","      <td>7.152143</td>\n","      <td>6.876786</td>\n","      <td>5.983694</td>\n","      <td>1079178800</td>\n","      <td>AAPL</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>-66.666667</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>3398</th>\n","      <td>2008-01-02</td>\n","      <td>52.090000</td>\n","      <td>52.320000</td>\n","      <td>50.790001</td>\n","      <td>40.795723</td>\n","      <td>8053700</td>\n","      <td>AXP</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>-66.666667</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>6796</th>\n","      <td>2008-01-02</td>\n","      <td>87.570000</td>\n","      <td>87.839996</td>\n","      <td>86.000000</td>\n","      <td>63.481632</td>\n","      <td>4303000</td>\n","      <td>BA</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>-66.666667</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>10194</th>\n","      <td>2008-01-02</td>\n","      <td>72.559998</td>\n","      <td>72.669998</td>\n","      <td>70.050003</td>\n","      <td>47.896084</td>\n","      <td>6337800</td>\n","      <td>CAT</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>-66.666667</td>\n","      <td>100.0</td>\n","    </tr>\n","    <tr>\n","      <th>13592</th>\n","      <td>2008-01-02</td>\n","      <td>27.000000</td>\n","      <td>27.299999</td>\n","      <td>26.209999</td>\n","      <td>19.569740</td>\n","      <td>64338900</td>\n","      <td>CSCO</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>100.0</td>\n","      <td>-66.666667</td>\n","      <td>100.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             date       open       high  ...  rsi_30     cci_30  dx_30\n","0      2008-01-02   7.116786   7.152143  ...   100.0 -66.666667  100.0\n","3398   2008-01-02  52.090000  52.320000  ...   100.0 -66.666667  100.0\n","6796   2008-01-02  87.570000  87.839996  ...   100.0 -66.666667  100.0\n","10194  2008-01-02  72.559998  72.669998  ...   100.0 -66.666667  100.0\n","13592  2008-01-02  27.000000  27.299999  ...   100.0 -66.666667  100.0\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"qz9K2vul6RmK"},"source":["## Add covariance matrix as states"]},{"cell_type":"code","metadata":{"id":"IhizvNwcrg1n","executionInfo":{"status":"ok","timestamp":1628260975876,"user_tz":-180,"elapsed":41848,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["# add covariance matrix as states\n","df=df.sort_values(['date','tic'],ignore_index=True)\n","df.index = df.date.factorize()[0]\n","\n","cov_list = []\n","return_list = []\n","\n","# look back is one year\n","lookback=252\n","for i in range(lookback,len(df.index.unique())):\n","  data_lookback = df.loc[i-lookback:i,:]\n","  price_lookback=data_lookback.pivot_table(index = 'date',columns = 'tic', values = 'close')\n","  return_lookback = price_lookback.pct_change().dropna()\n","  return_list.append(return_lookback)\n","\n","  covs = return_lookback.cov().values \n","  cov_list.append(covs)\n","\n","  \n","df_cov = pd.DataFrame({'date':df.date.unique()[lookback:],'cov_list':cov_list,'return_list':return_list})\n","df = df.merge(df_cov, on='date')\n","df = df.sort_values(['date','tic']).reset_index(drop=True)\n","        "],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dUPwwa13uBQ-","executionInfo":{"status":"ok","timestamp":1628260975877,"user_tz":-180,"elapsed":19,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"5b8d4c0d-4df1-4137-a407-e260e30e8f71"},"source":["df.shape"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(91234, 14)"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"wv3jR1zPrg4g","executionInfo":{"status":"ok","timestamp":1628260976478,"user_tz":-180,"elapsed":618,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"3adb45bf-e7c9-4887-c1bf-902819c701b2"},"source":["df.head()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","      <th>macd</th>\n","      <th>rsi_30</th>\n","      <th>cci_30</th>\n","      <th>dx_30</th>\n","      <th>cov_list</th>\n","      <th>return_list</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-12-31</td>\n","      <td>3.070357</td>\n","      <td>3.133571</td>\n","      <td>3.047857</td>\n","      <td>2.621168</td>\n","      <td>607541200</td>\n","      <td>AAPL</td>\n","      <td>2</td>\n","      <td>-0.083794</td>\n","      <td>42.254781</td>\n","      <td>-80.495083</td>\n","      <td>16.129793</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-12-31</td>\n","      <td>17.969999</td>\n","      <td>18.750000</td>\n","      <td>17.910000</td>\n","      <td>15.025569</td>\n","      <td>9625600</td>\n","      <td>AXP</td>\n","      <td>2</td>\n","      <td>-0.964124</td>\n","      <td>42.554845</td>\n","      <td>-75.362550</td>\n","      <td>25.776759</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-12-31</td>\n","      <td>41.590000</td>\n","      <td>43.049999</td>\n","      <td>41.500000</td>\n","      <td>32.005901</td>\n","      <td>5443100</td>\n","      <td>BA</td>\n","      <td>2</td>\n","      <td>-0.279798</td>\n","      <td>47.440267</td>\n","      <td>156.995097</td>\n","      <td>5.366299</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-12-31</td>\n","      <td>43.700001</td>\n","      <td>45.099998</td>\n","      <td>43.700001</td>\n","      <td>31.095800</td>\n","      <td>6277400</td>\n","      <td>CAT</td>\n","      <td>2</td>\n","      <td>0.688541</td>\n","      <td>51.205314</td>\n","      <td>98.432308</td>\n","      <td>26.331746</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-12-31</td>\n","      <td>16.180000</td>\n","      <td>16.549999</td>\n","      <td>16.120001</td>\n","      <td>12.019092</td>\n","      <td>37513700</td>\n","      <td>CSCO</td>\n","      <td>2</td>\n","      <td>-0.102729</td>\n","      <td>45.961924</td>\n","      <td>11.978197</td>\n","      <td>13.387087</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date  ...                                        return_list\n","0  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","1  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","2  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","3  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","4  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"UooHj1OgbU4v"},"source":["<a id='4'></a>\n","# Part 5. Design Environment\n","Considering the stochastic and interactive nature of the automated stock trading tasks, a financial task is modeled as a **Markov Decision Process (MDP)** problem. The training process involves observing stock price change, taking an action and reward's calculation to have the agent adjusting its strategy accordingly. By interacting with the environment, the trading agent will derive a trading strategy with the maximized rewards as time proceeds.\n","\n","Our trading environments, based on OpenAI Gym framework, simulate live stock markets with real market data according to the principle of time-driven simulation.\n","\n","The action space describes the allowed actions that the agent interacts with the environment. Normally, action a includes three actions: {-1, 0, 1}, where -1, 0, 1 represent selling, holding, and buying one share. Also, an action can be carried upon multiple shares. We use an action space {-k,…,-1, 0, 1, …, k}, where k denotes the number of shares to buy and -k denotes the number of shares to sell. For example, \"Buy 10 shares of AAPL\" or \"Sell 10 shares of AAPL\" are 10 or -10, respectively. The continuous action space needs to be normalized to [-1, 1], since the policy is defined on a Gaussian distribution, which needs to be normalized and symmetric."]},{"cell_type":"markdown","metadata":{"id":"MQnmN1qdk88I"},"source":["## Training data split: 2009-01-01 to 2018-12-31"]},{"cell_type":"code","metadata":{"id":"NrPxgv4eBQ_R","executionInfo":{"status":"ok","timestamp":1628260976479,"user_tz":-180,"elapsed":7,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["train = data_split(df, '2009-01-01','2020-07-01')\n","#trade = data_split(df, '2020-01-01', config.END_DATE)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"vU2vXEll0hfk","executionInfo":{"status":"ok","timestamp":1628260977005,"user_tz":-180,"elapsed":532,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"f540063e-389e-44e8-f6a0-16a1221c0d16"},"source":["train.head()"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","      <th>macd</th>\n","      <th>rsi_30</th>\n","      <th>cci_30</th>\n","      <th>dx_30</th>\n","      <th>cov_list</th>\n","      <th>return_list</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>3.067143</td>\n","      <td>3.251429</td>\n","      <td>3.041429</td>\n","      <td>2.787006</td>\n","      <td>746015200</td>\n","      <td>AAPL</td>\n","      <td>4</td>\n","      <td>-0.071164</td>\n","      <td>45.440193</td>\n","      <td>-32.068804</td>\n","      <td>2.140064</td>\n","      <td>[[0.0013661511510990034, 0.001002835238400853,...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>18.570000</td>\n","      <td>19.520000</td>\n","      <td>18.400000</td>\n","      <td>15.657365</td>\n","      <td>10955700</td>\n","      <td>AXP</td>\n","      <td>4</td>\n","      <td>-0.857433</td>\n","      <td>43.957537</td>\n","      <td>-42.753090</td>\n","      <td>16.335101</td>\n","      <td>[[0.0013661511510990034, 0.001002835238400853,...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>42.799999</td>\n","      <td>45.560001</td>\n","      <td>42.779999</td>\n","      <td>33.941101</td>\n","      <td>7010200</td>\n","      <td>BA</td>\n","      <td>4</td>\n","      <td>-0.002007</td>\n","      <td>50.822042</td>\n","      <td>272.812831</td>\n","      <td>20.494464</td>\n","      <td>[[0.0013661511510990034, 0.001002835238400853,...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>44.910000</td>\n","      <td>46.980000</td>\n","      <td>44.709999</td>\n","      <td>32.655109</td>\n","      <td>7117200</td>\n","      <td>CAT</td>\n","      <td>4</td>\n","      <td>0.875031</td>\n","      <td>53.661249</td>\n","      <td>129.760396</td>\n","      <td>34.637448</td>\n","      <td>[[0.0013661511510990034, 0.001002835238400853,...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2009-01-02</td>\n","      <td>16.410000</td>\n","      <td>17.000000</td>\n","      <td>16.250000</td>\n","      <td>12.505757</td>\n","      <td>40980600</td>\n","      <td>CSCO</td>\n","      <td>4</td>\n","      <td>-0.061562</td>\n","      <td>48.322168</td>\n","      <td>54.454064</td>\n","      <td>2.653808</td>\n","      <td>[[0.0013661511510990034, 0.001002835238400853,...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date  ...                                        return_list\n","0  2009-01-02  ...  tic             AAPL       AXP        BA  ... ...\n","0  2009-01-02  ...  tic             AAPL       AXP        BA  ... ...\n","0  2009-01-02  ...  tic             AAPL       AXP        BA  ... ...\n","0  2009-01-02  ...  tic             AAPL       AXP        BA  ... ...\n","0  2009-01-02  ...  tic             AAPL       AXP        BA  ... ...\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"sxQTNjpblAMN"},"source":["## Environment for Portfolio Allocation\n"]},{"cell_type":"code","metadata":{"id":"xlfE-VERbU40","executionInfo":{"status":"ok","timestamp":1628260977499,"user_tz":-180,"elapsed":500,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["import numpy as np\n","import pandas as pd\n","from gym.utils import seeding\n","import gym\n","from gym import spaces\n","import matplotlib\n","matplotlib.use('Agg')\n","import matplotlib.pyplot as plt\n","from stable_baselines3.common.vec_env import DummyVecEnv\n","\n","\n","class StockPortfolioEnv(gym.Env):\n","    \"\"\"A single stock trading environment for OpenAI gym\n","\n","    Attributes\n","    ----------\n","        df: DataFrame\n","            input data\n","        stock_dim : int\n","            number of unique stocks\n","        hmax : int\n","            maximum number of shares to trade\n","        initial_amount : int\n","            start money\n","        transaction_cost_pct: float\n","            transaction cost percentage per trade\n","        reward_scaling: float\n","            scaling factor for reward, good for training\n","        state_space: int\n","            the dimension of input features\n","        action_space: int\n","            equals stock dimension\n","        tech_indicator_list: list\n","            a list of technical indicator names\n","        turbulence_threshold: int\n","            a threshold to control risk aversion\n","        day: int\n","            an increment number to control date\n","\n","    Methods\n","    -------\n","    _sell_stock()\n","        perform sell action based on the sign of the action\n","    _buy_stock()\n","        perform buy action based on the sign of the action\n","    step()\n","        at each step the agent will return actions, then \n","        we will calculate the reward, and return the next observation.\n","    reset()\n","        reset the environment\n","    render()\n","        use render to return other functions\n","    save_asset_memory()\n","        return account value at each time step\n","    save_action_memory()\n","        return actions/positions at each time step\n","        \n","\n","    \"\"\"\n","    metadata = {'render.modes': ['human']}\n","\n","    def __init__(self, \n","                df,\n","                stock_dim,\n","                hmax,\n","                initial_amount,\n","                transaction_cost_pct,\n","                reward_scaling,\n","                state_space,\n","                action_space,\n","                tech_indicator_list,\n","                turbulence_threshold=None,\n","                lookback=252,\n","                day = 0):\n","        #super(StockEnv, self).__init__()\n","        #money = 10 , scope = 1\n","        self.day = day\n","        self.lookback=lookback\n","        self.df = df\n","        self.stock_dim = stock_dim\n","        self.hmax = hmax\n","        self.initial_amount = initial_amount\n","        self.transaction_cost_pct =transaction_cost_pct\n","        self.reward_scaling = reward_scaling\n","        self.state_space = state_space\n","        self.action_space = action_space\n","        self.tech_indicator_list = tech_indicator_list\n","\n","        # action_space normalization and shape is self.stock_dim\n","        self.action_space = spaces.Box(low = 0, high = 1,shape = (self.action_space,)) \n","        # Shape = (34, 30)\n","        # covariance matrix + technical indicators\n","        self.observation_space = spaces.Box(low=-np.inf, high=np.inf, shape = (self.state_space+len(self.tech_indicator_list),self.state_space))\n","\n","        # load data from a pandas dataframe\n","        self.data = self.df.loc[self.day,:]\n","        self.covs = self.data['cov_list'].values[0]\n","        self.state =  np.append(np.array(self.covs), [self.data[tech].values.tolist() for tech in self.tech_indicator_list ], axis=0)\n","        self.terminal = False     \n","        self.turbulence_threshold = turbulence_threshold        \n","        # initalize state: inital portfolio return + individual stock return + individual weights\n","        self.portfolio_value = self.initial_amount\n","\n","        # memorize portfolio value each step\n","        self.asset_memory = [self.initial_amount]\n","        # memorize portfolio return each step\n","        self.portfolio_return_memory = [0]\n","        self.actions_memory=[[1/self.stock_dim]*self.stock_dim]\n","        self.date_memory=[self.data.date.unique()[0]]\n","\n","        \n","    def step(self, actions):\n","        # print(self.day)\n","        self.terminal = self.day >= len(self.df.index.unique())-1\n","        # print(actions)\n","\n","        if self.terminal:\n","            df = pd.DataFrame(self.portfolio_return_memory)\n","            df.columns = ['daily_return']\n","            plt.plot(df.daily_return.cumsum(),'r')\n","            plt.savefig('results/cumulative_reward.png')\n","            plt.close()\n","            \n","            plt.plot(self.portfolio_return_memory,'r')\n","            plt.savefig('results/rewards.png')\n","            plt.close()\n","\n","            print(\"=================================\")\n","            print(\"begin_total_asset:{}\".format(self.asset_memory[0]))           \n","            print(\"end_total_asset:{}\".format(self.portfolio_value))\n","\n","            df_daily_return = pd.DataFrame(self.portfolio_return_memory)\n","            df_daily_return.columns = ['daily_return']\n","            if df_daily_return['daily_return'].std() !=0:\n","              sharpe = (252**0.5)*df_daily_return['daily_return'].mean()/ \\\n","                       df_daily_return['daily_return'].std()\n","              print(\"Sharpe: \",sharpe)\n","            print(\"=================================\")\n","            \n","            return self.state, self.reward, self.terminal,{}\n","\n","        else:\n","            #print(\"Model actions: \",actions)\n","            # actions are the portfolio weight\n","            # normalize to sum of 1\n","            #if (np.array(actions) - np.array(actions).min()).sum() != 0:\n","            #  norm_actions = (np.array(actions) - np.array(actions).min()) / (np.array(actions) - np.array(actions).min()).sum()\n","            #else:\n","            #  norm_actions = actions\n","            weights = self.softmax_normalization(actions) \n","            #print(\"Normalized actions: \", weights)\n","            self.actions_memory.append(weights)\n","            last_day_memory = self.data\n","\n","            #load next state\n","            self.day += 1\n","            self.data = self.df.loc[self.day,:]\n","            self.covs = self.data['cov_list'].values[0]\n","            self.state =  np.append(np.array(self.covs), [self.data[tech].values.tolist() for tech in self.tech_indicator_list ], axis=0)\n","            #print(self.state)\n","            # calcualte portfolio return\n","            # individual stocks' return * weight\n","            portfolio_return = sum(((self.data.close.values / last_day_memory.close.values)-1)*weights)\n","            # update portfolio value\n","            new_portfolio_value = self.portfolio_value*(1+portfolio_return)\n","            self.portfolio_value = new_portfolio_value\n","\n","            # save into memory\n","            self.portfolio_return_memory.append(portfolio_return)\n","            self.date_memory.append(self.data.date.unique()[0])            \n","            self.asset_memory.append(new_portfolio_value)\n","\n","            # the reward is the new portfolio value or end portfolo value\n","            self.reward = new_portfolio_value \n","            #print(\"Step reward: \", self.reward)\n","            #self.reward = self.reward*self.reward_scaling\n","\n","        return self.state, self.reward, self.terminal, {}\n","\n","    def reset(self):\n","        self.asset_memory = [self.initial_amount]\n","        self.day = 0\n","        self.data = self.df.loc[self.day,:]\n","        # load states\n","        self.covs = self.data['cov_list'].values[0]\n","        self.state =  np.append(np.array(self.covs), [self.data[tech].values.tolist() for tech in self.tech_indicator_list ], axis=0)\n","        self.portfolio_value = self.initial_amount\n","        #self.cost = 0\n","        #self.trades = 0\n","        self.terminal = False \n","        self.portfolio_return_memory = [0]\n","        self.actions_memory=[[1/self.stock_dim]*self.stock_dim]\n","        self.date_memory=[self.data.date.unique()[0]] \n","        return self.state\n","    \n","    def render(self, mode='human'):\n","        return self.state\n","        \n","    def softmax_normalization(self, actions):\n","        numerator = np.exp(actions)\n","        denominator = np.sum(np.exp(actions))\n","        softmax_output = numerator/denominator\n","        return softmax_output\n","\n","    \n","    def save_asset_memory(self):\n","        date_list = self.date_memory\n","        portfolio_return = self.portfolio_return_memory\n","        #print(len(date_list))\n","        #print(len(asset_list))\n","        df_account_value = pd.DataFrame({'date':date_list,'daily_return':portfolio_return})\n","        return df_account_value\n","\n","    def save_action_memory(self):\n","        # date and close price length must match actions length\n","        date_list = self.date_memory\n","        df_date = pd.DataFrame(date_list)\n","        df_date.columns = ['date']\n","        \n","        action_list = self.actions_memory\n","        df_actions = pd.DataFrame(action_list)\n","        df_actions.columns = self.data.tic.values\n","        df_actions.index = df_date.date\n","        #df_actions = pd.DataFrame({'date':date_list,'actions':action_list})\n","        return df_actions\n","\n","    def _seed(self, seed=None):\n","        self.np_random, seed = seeding.np_random(seed)\n","        return [seed]\n","\n","    def get_sb_env(self):\n","        e = DummyVecEnv([lambda: self])\n","        obs = e.reset()\n","        return e, obs"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"MzD06X0CbU43","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628261154660,"user_tz":-180,"elapsed":405,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"c94dc2f2-0e5c-44ac-96df-683939a5f5b0"},"source":["stock_dimension = len(train.tic.unique())\n","state_space = stock_dimension\n","print(f\"Stock Dimension: {stock_dimension}, State Space: {state_space}\")\n"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Stock Dimension: 29, State Space: 29\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jyg0_ZuVEVQ5","executionInfo":{"status":"ok","timestamp":1628261156042,"user_tz":-180,"elapsed":2,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["env_kwargs = {\n","    \"hmax\": 100, \n","    \"initial_amount\": 1000000, \n","    \"transaction_cost_pct\": 0.001, \n","    \"state_space\": state_space, \n","    \"stock_dim\": stock_dimension, \n","    \"tech_indicator_list\": config.TECHNICAL_INDICATORS_LIST, \n","    \"action_space\": stock_dimension, \n","    \"reward_scaling\": 1e-4\n","    \n","}\n","\n","e_train_gym = StockPortfolioEnv(df = train, **env_kwargs)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"HTlOf8SJGdkl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628261157430,"user_tz":-180,"elapsed":5,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"faaba74b-598e-40fa-eb98-85a3e08691bc"},"source":["env_train, _ = e_train_gym.get_sb_env()\n","print(type(env_train))"],"execution_count":19,"outputs":[{"output_type":"stream","text":["<class 'stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv'>\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"2eKIu5UPlPnk"},"source":["<a id='5'></a>\n","# Part 6: Implement DRL Algorithms\n","* The implementation of the DRL algorithms are based on **OpenAI Baselines** and **Stable Baselines**. Stable Baselines is a fork of OpenAI Baselines, with a major structural refactoring, and code cleanups.\n","* FinRL library includes fine-tuned standard DRL algorithms, such as DQN, DDPG,\n","Multi-Agent DDPG, PPO, SAC, A2C and TD3. We also allow users to\n","design their own DRL algorithms by adapting these DRL algorithms."]},{"cell_type":"code","metadata":{"id":"VDxU0iCEGdnb","executionInfo":{"status":"ok","timestamp":1628261160905,"user_tz":-180,"elapsed":4,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["# initialize\n","agent = DRLAgent(env = env_train)"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hdPe8uzflbXe"},"source":["### Model 1: **A2C**\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t1tORf1fIcQ2","executionInfo":{"status":"ok","timestamp":1628261175047,"user_tz":-180,"elapsed":12199,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"3c783ef2-ccf4-4c37-cdb2-3db8a36ba3de"},"source":["agent = DRLAgent(env = env_train)\n","\n","A2C_PARAMS = {\"n_steps\": 5, \"ent_coef\": 0.005, \"learning_rate\": 0.0002}\n","model_a2c = agent.get_model(model_name=\"a2c\",model_kwargs = A2C_PARAMS)"],"execution_count":21,"outputs":[{"output_type":"stream","text":["{'n_steps': 5, 'ent_coef': 0.005, 'learning_rate': 0.0002}\n","Using cuda device\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DazEdrMpIdyz","executionInfo":{"status":"ok","timestamp":1628261353658,"user_tz":-180,"elapsed":178626,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"8cce9995-7df4-4e32-dc4b-f842f1b56134"},"source":["trained_a2c = agent.train_model(model=model_a2c, \n","                                tb_log_name='a2c',\n","                                total_timesteps=50000)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["Logging to tensorboard_log/a2c/a2c_1\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 141       |\n","|    iterations         | 100       |\n","|    time_elapsed       | 3         |\n","|    total_timesteps    | 500       |\n","| train/                |           |\n","|    entropy_loss       | -41.1     |\n","|    explained_variance | -3.58e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 99        |\n","|    policy_loss        | 1.8e+08   |\n","|    std                | 0.998     |\n","|    value_loss         | 2.86e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 186      |\n","|    iterations         | 200      |\n","|    time_elapsed       | 5        |\n","|    total_timesteps    | 1000     |\n","| train/                |          |\n","|    entropy_loss       | -41.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 199      |\n","|    policy_loss        | 2.59e+08 |\n","|    std                | 0.997    |\n","|    value_loss         | 4.74e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 208      |\n","|    iterations         | 300      |\n","|    time_elapsed       | 7        |\n","|    total_timesteps    | 1500     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 299      |\n","|    policy_loss        | 3.89e+08 |\n","|    std                | 0.996    |\n","|    value_loss         | 1.05e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 225      |\n","|    iterations         | 400      |\n","|    time_elapsed       | 8        |\n","|    total_timesteps    | 2000     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 399      |\n","|    policy_loss        | 4.41e+08 |\n","|    std                | 0.995    |\n","|    value_loss         | 1.41e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 237       |\n","|    iterations         | 500       |\n","|    time_elapsed       | 10        |\n","|    total_timesteps    | 2500      |\n","| train/                |           |\n","|    entropy_loss       | -41       |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 499       |\n","|    policy_loss        | 6.14e+08  |\n","|    std                | 0.995     |\n","|    value_loss         | 2.64e+14  |\n","-------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5362313.553811333\n","Sharpe:  0.8865882557813423\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 242      |\n","|    iterations         | 600      |\n","|    time_elapsed       | 12       |\n","|    total_timesteps    | 3000     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 599      |\n","|    policy_loss        | 1.41e+08 |\n","|    std                | 0.994    |\n","|    value_loss         | 1.43e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 248      |\n","|    iterations         | 700      |\n","|    time_elapsed       | 14       |\n","|    total_timesteps    | 3500     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 699      |\n","|    policy_loss        | 2.15e+08 |\n","|    std                | 0.994    |\n","|    value_loss         | 3.61e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 253       |\n","|    iterations         | 800       |\n","|    time_elapsed       | 15        |\n","|    total_timesteps    | 4000      |\n","| train/                |           |\n","|    entropy_loss       | -41       |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 799       |\n","|    policy_loss        | 3.17e+08  |\n","|    std                | 0.994     |\n","|    value_loss         | 7.4e+13   |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 257      |\n","|    iterations         | 900      |\n","|    time_elapsed       | 17       |\n","|    total_timesteps    | 4500     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 899      |\n","|    policy_loss        | 3.99e+08 |\n","|    std                | 0.994    |\n","|    value_loss         | 1.26e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 260      |\n","|    iterations         | 1000     |\n","|    time_elapsed       | 19       |\n","|    total_timesteps    | 5000     |\n","| train/                |          |\n","|    entropy_loss       | -41      |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 999      |\n","|    policy_loss        | 4.68e+08 |\n","|    std                | 0.994    |\n","|    value_loss         | 1.84e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 263       |\n","|    iterations         | 1100      |\n","|    time_elapsed       | 20        |\n","|    total_timesteps    | 5500      |\n","| train/                |           |\n","|    entropy_loss       | -41       |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 1099      |\n","|    policy_loss        | 6.78e+08  |\n","|    std                | 0.994     |\n","|    value_loss         | 3.24e+14  |\n","-------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5631212.254213073\n","Sharpe:  0.9074212734424826\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 263       |\n","|    iterations         | 1200      |\n","|    time_elapsed       | 22        |\n","|    total_timesteps    | 6000      |\n","| train/                |           |\n","|    entropy_loss       | -40.9     |\n","|    explained_variance | -3.58e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 1199      |\n","|    policy_loss        | 1.54e+08  |\n","|    std                | 0.993     |\n","|    value_loss         | 1.84e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 265      |\n","|    iterations         | 1300     |\n","|    time_elapsed       | 24       |\n","|    total_timesteps    | 6500     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1299     |\n","|    policy_loss        | 2.12e+08 |\n","|    std                | 0.992    |\n","|    value_loss         | 3.12e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 267      |\n","|    iterations         | 1400     |\n","|    time_elapsed       | 26       |\n","|    total_timesteps    | 7000     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1399     |\n","|    policy_loss        | 2.95e+08 |\n","|    std                | 0.992    |\n","|    value_loss         | 6.79e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 269      |\n","|    iterations         | 1500     |\n","|    time_elapsed       | 27       |\n","|    total_timesteps    | 7500     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1499     |\n","|    policy_loss        | 3.55e+08 |\n","|    std                | 0.992    |\n","|    value_loss         | 9.58e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 271      |\n","|    iterations         | 1600     |\n","|    time_elapsed       | 29       |\n","|    total_timesteps    | 8000     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1599     |\n","|    policy_loss        | 4.96e+08 |\n","|    std                | 0.991    |\n","|    value_loss         | 1.79e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 272       |\n","|    iterations         | 1700      |\n","|    time_elapsed       | 31        |\n","|    total_timesteps    | 8500      |\n","| train/                |           |\n","|    entropy_loss       | -40.9     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 1699      |\n","|    policy_loss        | 6.57e+08  |\n","|    std                | 0.991     |\n","|    value_loss         | 2.79e+14  |\n","-------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4948774.04649119\n","Sharpe:  0.8549819366576236\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 271      |\n","|    iterations         | 1800     |\n","|    time_elapsed       | 33       |\n","|    total_timesteps    | 9000     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1799     |\n","|    policy_loss        | 1.76e+08 |\n","|    std                | 0.99     |\n","|    value_loss         | 2.39e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 272      |\n","|    iterations         | 1900     |\n","|    time_elapsed       | 34       |\n","|    total_timesteps    | 9500     |\n","| train/                |          |\n","|    entropy_loss       | -40.9    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 1899     |\n","|    policy_loss        | 2.35e+08 |\n","|    std                | 0.99     |\n","|    value_loss         | 4.19e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 273       |\n","|    iterations         | 2000      |\n","|    time_elapsed       | 36        |\n","|    total_timesteps    | 10000     |\n","| train/                |           |\n","|    entropy_loss       | -40.8     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 1999      |\n","|    policy_loss        | 3.34e+08  |\n","|    std                | 0.99      |\n","|    value_loss         | 7.85e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 2100     |\n","|    time_elapsed       | 38       |\n","|    total_timesteps    | 10500    |\n","| train/                |          |\n","|    entropy_loss       | -40.8    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2099     |\n","|    policy_loss        | 3.9e+08  |\n","|    std                | 0.989    |\n","|    value_loss         | 1.15e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 276       |\n","|    iterations         | 2200      |\n","|    time_elapsed       | 39        |\n","|    total_timesteps    | 11000     |\n","| train/                |           |\n","|    entropy_loss       | -40.8     |\n","|    explained_variance | -2.38e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 2199      |\n","|    policy_loss        | 5.5e+08   |\n","|    std                | 0.988     |\n","|    value_loss         | 2.43e+14  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 2300     |\n","|    time_elapsed       | 41       |\n","|    total_timesteps    | 11500    |\n","| train/                |          |\n","|    entropy_loss       | -40.8    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2299     |\n","|    policy_loss        | 5.45e+08 |\n","|    std                | 0.987    |\n","|    value_loss         | 2.51e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5189255.898088585\n","Sharpe:  0.8741893633225374\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 276       |\n","|    iterations         | 2400      |\n","|    time_elapsed       | 43        |\n","|    total_timesteps    | 12000     |\n","| train/                |           |\n","|    entropy_loss       | -40.8     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 2399      |\n","|    policy_loss        | 1.57e+08  |\n","|    std                | 0.987     |\n","|    value_loss         | 2.08e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 2500     |\n","|    time_elapsed       | 45       |\n","|    total_timesteps    | 12500    |\n","| train/                |          |\n","|    entropy_loss       | -40.8    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2499     |\n","|    policy_loss        | 2.34e+08 |\n","|    std                | 0.987    |\n","|    value_loss         | 4.08e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 2600     |\n","|    time_elapsed       | 46       |\n","|    total_timesteps    | 13000    |\n","| train/                |          |\n","|    entropy_loss       | -40.8    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2599     |\n","|    policy_loss        | 3.33e+08 |\n","|    std                | 0.987    |\n","|    value_loss         | 8.96e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 2700     |\n","|    time_elapsed       | 48       |\n","|    total_timesteps    | 13500    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2699     |\n","|    policy_loss        | 4.1e+08  |\n","|    std                | 0.986    |\n","|    value_loss         | 1.29e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 2800     |\n","|    time_elapsed       | 50       |\n","|    total_timesteps    | 14000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2799     |\n","|    policy_loss        | 5.14e+08 |\n","|    std                | 0.986    |\n","|    value_loss         | 2.33e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4810221.1024554195\n","Sharpe:  0.8384504424997478\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 2900     |\n","|    time_elapsed       | 52       |\n","|    total_timesteps    | 14500    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2899     |\n","|    policy_loss        | 1.09e+08 |\n","|    std                | 0.986    |\n","|    value_loss         | 8.45e+12 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 3000     |\n","|    time_elapsed       | 54       |\n","|    total_timesteps    | 15000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 2999     |\n","|    policy_loss        | 2.03e+08 |\n","|    std                | 0.985    |\n","|    value_loss         | 2.95e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 277       |\n","|    iterations         | 3100      |\n","|    time_elapsed       | 55        |\n","|    total_timesteps    | 15500     |\n","| train/                |           |\n","|    entropy_loss       | -40.7     |\n","|    explained_variance | -2.38e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 3099      |\n","|    policy_loss        | 2.62e+08  |\n","|    std                | 0.985     |\n","|    value_loss         | 4.57e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 3200     |\n","|    time_elapsed       | 57       |\n","|    total_timesteps    | 16000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3199     |\n","|    policy_loss        | 3.59e+08 |\n","|    std                | 0.985    |\n","|    value_loss         | 8.47e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 3300     |\n","|    time_elapsed       | 59       |\n","|    total_timesteps    | 16500    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3299     |\n","|    policy_loss        | 4.22e+08 |\n","|    std                | 0.985    |\n","|    value_loss         | 1.25e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 3400     |\n","|    time_elapsed       | 61       |\n","|    total_timesteps    | 17000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3399     |\n","|    policy_loss        | 5.07e+08 |\n","|    std                | 0.985    |\n","|    value_loss         | 2.15e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4886540.637504951\n","Sharpe:  0.8475816641447078\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 3500     |\n","|    time_elapsed       | 63       |\n","|    total_timesteps    | 17500    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3499     |\n","|    policy_loss        | 1.27e+08 |\n","|    std                | 0.985    |\n","|    value_loss         | 1.21e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 3600     |\n","|    time_elapsed       | 65       |\n","|    total_timesteps    | 18000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3599     |\n","|    policy_loss        | 1.97e+08 |\n","|    std                | 0.984    |\n","|    value_loss         | 2.88e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 275       |\n","|    iterations         | 3700      |\n","|    time_elapsed       | 67        |\n","|    total_timesteps    | 18500     |\n","| train/                |           |\n","|    entropy_loss       | -40.7     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 3699      |\n","|    policy_loss        | 2.68e+08  |\n","|    std                | 0.983     |\n","|    value_loss         | 5.67e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 3800     |\n","|    time_elapsed       | 68       |\n","|    total_timesteps    | 19000    |\n","| train/                |          |\n","|    entropy_loss       | -40.7    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3799     |\n","|    policy_loss        | 3.52e+08 |\n","|    std                | 0.983    |\n","|    value_loss         | 9.36e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 3900     |\n","|    time_elapsed       | 70       |\n","|    total_timesteps    | 19500    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 3899     |\n","|    policy_loss        | 4.89e+08 |\n","|    std                | 0.982    |\n","|    value_loss         | 1.59e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 275       |\n","|    iterations         | 4000      |\n","|    time_elapsed       | 72        |\n","|    total_timesteps    | 20000     |\n","| train/                |           |\n","|    entropy_loss       | -40.6     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 3999      |\n","|    policy_loss        | 6.43e+08  |\n","|    std                | 0.982     |\n","|    value_loss         | 2.7e+14   |\n","-------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4912499.796227858\n","Sharpe:  0.8470330787014392\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 274      |\n","|    iterations         | 4100     |\n","|    time_elapsed       | 74       |\n","|    total_timesteps    | 20500    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4099     |\n","|    policy_loss        | 1.4e+08  |\n","|    std                | 0.982    |\n","|    value_loss         | 1.72e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 274      |\n","|    iterations         | 4200     |\n","|    time_elapsed       | 76       |\n","|    total_timesteps    | 21000    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4199     |\n","|    policy_loss        | 2e+08    |\n","|    std                | 0.982    |\n","|    value_loss         | 2.61e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 4300     |\n","|    time_elapsed       | 78       |\n","|    total_timesteps    | 21500    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4299     |\n","|    policy_loss        | 2.82e+08 |\n","|    std                | 0.982    |\n","|    value_loss         | 6.45e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 275      |\n","|    iterations         | 4400     |\n","|    time_elapsed       | 79       |\n","|    total_timesteps    | 22000    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4399     |\n","|    policy_loss        | 3.55e+08 |\n","|    std                | 0.981    |\n","|    value_loss         | 9.89e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 4500     |\n","|    time_elapsed       | 81       |\n","|    total_timesteps    | 22500    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4499     |\n","|    policy_loss        | 5.45e+08 |\n","|    std                | 0.981    |\n","|    value_loss         | 1.88e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 4600     |\n","|    time_elapsed       | 83       |\n","|    total_timesteps    | 23000    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4599     |\n","|    policy_loss        | 6.79e+08 |\n","|    std                | 0.981    |\n","|    value_loss         | 3.13e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5042735.400587818\n","Sharpe:  0.8641626907825481\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 276       |\n","|    iterations         | 4700      |\n","|    time_elapsed       | 84        |\n","|    total_timesteps    | 23500     |\n","| train/                |           |\n","|    entropy_loss       | -40.6     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 4699      |\n","|    policy_loss        | 1.55e+08  |\n","|    std                | 0.981     |\n","|    value_loss         | 1.9e+13   |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 276      |\n","|    iterations         | 4800     |\n","|    time_elapsed       | 86       |\n","|    total_timesteps    | 24000    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4799     |\n","|    policy_loss        | 2.11e+08 |\n","|    std                | 0.98     |\n","|    value_loss         | 3.53e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 277       |\n","|    iterations         | 4900      |\n","|    time_elapsed       | 88        |\n","|    total_timesteps    | 24500     |\n","| train/                |           |\n","|    entropy_loss       | -40.6     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 4899      |\n","|    policy_loss        | 3.27e+08  |\n","|    std                | 0.98      |\n","|    value_loss         | 7.61e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 5000     |\n","|    time_elapsed       | 90       |\n","|    total_timesteps    | 25000    |\n","| train/                |          |\n","|    entropy_loss       | -40.6    |\n","|    explained_variance | 2.38e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 4999     |\n","|    policy_loss        | 3.44e+08 |\n","|    std                | 0.98     |\n","|    value_loss         | 1.02e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 5100     |\n","|    time_elapsed       | 91       |\n","|    total_timesteps    | 25500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5099     |\n","|    policy_loss        | 5.26e+08 |\n","|    std                | 0.98     |\n","|    value_loss         | 2e+14    |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 5200     |\n","|    time_elapsed       | 93       |\n","|    total_timesteps    | 26000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5199     |\n","|    policy_loss        | 5.25e+08 |\n","|    std                | 0.979    |\n","|    value_loss         | 2.39e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4985688.545967788\n","Sharpe:  0.8606435601520733\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 5300     |\n","|    time_elapsed       | 95       |\n","|    total_timesteps    | 26500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5299     |\n","|    policy_loss        | 1.75e+08 |\n","|    std                | 0.979    |\n","|    value_loss         | 2.34e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 5400     |\n","|    time_elapsed       | 97       |\n","|    total_timesteps    | 27000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5399     |\n","|    policy_loss        | 2.36e+08 |\n","|    std                | 0.979    |\n","|    value_loss         | 4.3e+13  |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 5500     |\n","|    time_elapsed       | 98       |\n","|    total_timesteps    | 27500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5499     |\n","|    policy_loss        | 3.64e+08 |\n","|    std                | 0.979    |\n","|    value_loss         | 8.14e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 5600     |\n","|    time_elapsed       | 100      |\n","|    total_timesteps    | 28000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5599     |\n","|    policy_loss        | 4.07e+08 |\n","|    std                | 0.978    |\n","|    value_loss         | 1.12e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 5700     |\n","|    time_elapsed       | 102      |\n","|    total_timesteps    | 28500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5699     |\n","|    policy_loss        | 5.89e+08 |\n","|    std                | 0.978    |\n","|    value_loss         | 2.51e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4940221.14982054\n","Sharpe:  0.8533415989114433\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 5800      |\n","|    time_elapsed       | 104       |\n","|    total_timesteps    | 29000     |\n","| train/                |           |\n","|    entropy_loss       | -40.5     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 5799      |\n","|    policy_loss        | 1.04e+08  |\n","|    std                | 0.978     |\n","|    value_loss         | 8.82e+12  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 5900     |\n","|    time_elapsed       | 105      |\n","|    total_timesteps    | 29500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5899     |\n","|    policy_loss        | 1.78e+08 |\n","|    std                | 0.977    |\n","|    value_loss         | 2.75e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 6000     |\n","|    time_elapsed       | 107      |\n","|    total_timesteps    | 30000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 5999     |\n","|    policy_loss        | 2.42e+08 |\n","|    std                | 0.977    |\n","|    value_loss         | 4.89e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 279       |\n","|    iterations         | 6100      |\n","|    time_elapsed       | 109       |\n","|    total_timesteps    | 30500     |\n","| train/                |           |\n","|    entropy_loss       | -40.5     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 6099      |\n","|    policy_loss        | 3.5e+08   |\n","|    std                | 0.977     |\n","|    value_loss         | 9.6e+13   |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 280      |\n","|    iterations         | 6200     |\n","|    time_elapsed       | 110      |\n","|    total_timesteps    | 31000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6199     |\n","|    policy_loss        | 4.67e+08 |\n","|    std                | 0.978    |\n","|    value_loss         | 1.52e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 280      |\n","|    iterations         | 6300     |\n","|    time_elapsed       | 112      |\n","|    total_timesteps    | 31500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6299     |\n","|    policy_loss        | 5.84e+08 |\n","|    std                | 0.978    |\n","|    value_loss         | 2.59e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5158560.219602554\n","Sharpe:  0.8778710136761767\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 280      |\n","|    iterations         | 6400     |\n","|    time_elapsed       | 114      |\n","|    total_timesteps    | 32000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6399     |\n","|    policy_loss        | 1.48e+08 |\n","|    std                | 0.978    |\n","|    value_loss         | 1.61e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 280      |\n","|    iterations         | 6500     |\n","|    time_elapsed       | 115      |\n","|    total_timesteps    | 32500    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6499     |\n","|    policy_loss        | 1.87e+08 |\n","|    std                | 0.976    |\n","|    value_loss         | 2.9e+13  |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 280      |\n","|    iterations         | 6600     |\n","|    time_elapsed       | 117      |\n","|    total_timesteps    | 33000    |\n","| train/                |          |\n","|    entropy_loss       | -40.5    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6599     |\n","|    policy_loss        | 2.69e+08 |\n","|    std                | 0.976    |\n","|    value_loss         | 5.82e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 6700     |\n","|    time_elapsed       | 119      |\n","|    total_timesteps    | 33500    |\n","| train/                |          |\n","|    entropy_loss       | -40.4    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6699     |\n","|    policy_loss        | 3.13e+08 |\n","|    std                | 0.976    |\n","|    value_loss         | 8.51e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 6800     |\n","|    time_elapsed       | 121      |\n","|    total_timesteps    | 34000    |\n","| train/                |          |\n","|    entropy_loss       | -40.4    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6799     |\n","|    policy_loss        | 4.79e+08 |\n","|    std                | 0.975    |\n","|    value_loss         | 1.65e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 6900     |\n","|    time_elapsed       | 123      |\n","|    total_timesteps    | 34500    |\n","| train/                |          |\n","|    entropy_loss       | -40.4    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 6899     |\n","|    policy_loss        | 5.57e+08 |\n","|    std                | 0.975    |\n","|    value_loss         | 2.61e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4800478.636460136\n","Sharpe:  0.8381197961232113\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 279       |\n","|    iterations         | 7000      |\n","|    time_elapsed       | 125       |\n","|    total_timesteps    | 35000     |\n","| train/                |           |\n","|    entropy_loss       | -40.4     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 6999      |\n","|    policy_loss        | 1.6e+08   |\n","|    std                | 0.975     |\n","|    value_loss         | 1.91e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 7100     |\n","|    time_elapsed       | 127      |\n","|    total_timesteps    | 35500    |\n","| train/                |          |\n","|    entropy_loss       | -40.4    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 7099     |\n","|    policy_loss        | 2.27e+08 |\n","|    std                | 0.974    |\n","|    value_loss         | 3.69e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 7200     |\n","|    time_elapsed       | 129      |\n","|    total_timesteps    | 36000    |\n","| train/                |          |\n","|    entropy_loss       | -40.4    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 7199     |\n","|    policy_loss        | 3.13e+08 |\n","|    std                | 0.973    |\n","|    value_loss         | 7.08e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 7300      |\n","|    time_elapsed       | 130       |\n","|    total_timesteps    | 36500     |\n","| train/                |           |\n","|    entropy_loss       | -40.3     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 7299      |\n","|    policy_loss        | 3.66e+08  |\n","|    std                | 0.972     |\n","|    value_loss         | 9.41e+13  |\n","-------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 7400      |\n","|    time_elapsed       | 132       |\n","|    total_timesteps    | 37000     |\n","| train/                |           |\n","|    entropy_loss       | -40.3     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 7399      |\n","|    policy_loss        | 5.81e+08  |\n","|    std                | 0.972     |\n","|    value_loss         | 2.66e+14  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 7500     |\n","|    time_elapsed       | 134      |\n","|    total_timesteps    | 37500    |\n","| train/                |          |\n","|    entropy_loss       | -40.3    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 7499     |\n","|    policy_loss        | 7.64e+08 |\n","|    std                | 0.971    |\n","|    value_loss         | 3.78e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5419785.705223756\n","Sharpe:  0.8958629693703949\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 7600      |\n","|    time_elapsed       | 136       |\n","|    total_timesteps    | 38000     |\n","| train/                |           |\n","|    entropy_loss       | -40.3     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 7599      |\n","|    policy_loss        | 1.57e+08  |\n","|    std                | 0.971     |\n","|    value_loss         | 1.96e+13  |\n","-------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 277       |\n","|    iterations         | 7700      |\n","|    time_elapsed       | 138       |\n","|    total_timesteps    | 38500     |\n","| train/                |           |\n","|    entropy_loss       | -40.3     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 7699      |\n","|    policy_loss        | 2.09e+08  |\n","|    std                | 0.97      |\n","|    value_loss         | 3.64e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 277      |\n","|    iterations         | 7800     |\n","|    time_elapsed       | 140      |\n","|    total_timesteps    | 39000    |\n","| train/                |          |\n","|    entropy_loss       | -40.3    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 7799     |\n","|    policy_loss        | 3.16e+08 |\n","|    std                | 0.971    |\n","|    value_loss         | 8.3e+13  |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 7900     |\n","|    time_elapsed       | 142      |\n","|    total_timesteps    | 39500    |\n","| train/                |          |\n","|    entropy_loss       | -40.3    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 7899     |\n","|    policy_loss        | 3.76e+08 |\n","|    std                | 0.971    |\n","|    value_loss         | 1.01e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 8000      |\n","|    time_elapsed       | 143       |\n","|    total_timesteps    | 40000     |\n","| train/                |           |\n","|    entropy_loss       | -40.3     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 7999      |\n","|    policy_loss        | 4.9e+08   |\n","|    std                | 0.97      |\n","|    value_loss         | 1.89e+14  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 8100     |\n","|    time_elapsed       | 145      |\n","|    total_timesteps    | 40500    |\n","| train/                |          |\n","|    entropy_loss       | -40.3    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8099     |\n","|    policy_loss        | 6.13e+08 |\n","|    std                | 0.97     |\n","|    value_loss         | 2.39e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4694763.985682484\n","Sharpe:  0.8298546601938912\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 8200     |\n","|    time_elapsed       | 147      |\n","|    total_timesteps    | 41000    |\n","| train/                |          |\n","|    entropy_loss       | -40.2    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8199     |\n","|    policy_loss        | 1.93e+08 |\n","|    std                | 0.969    |\n","|    value_loss         | 2.67e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 8300     |\n","|    time_elapsed       | 149      |\n","|    total_timesteps    | 41500    |\n","| train/                |          |\n","|    entropy_loss       | -40.2    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8299     |\n","|    policy_loss        | 2.45e+08 |\n","|    std                | 0.969    |\n","|    value_loss         | 4.17e+13 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 8400      |\n","|    time_elapsed       | 150       |\n","|    total_timesteps    | 42000     |\n","| train/                |           |\n","|    entropy_loss       | -40.2     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 8399      |\n","|    policy_loss        | 3.43e+08  |\n","|    std                | 0.969     |\n","|    value_loss         | 9.97e+13  |\n","-------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 8500      |\n","|    time_elapsed       | 152       |\n","|    total_timesteps    | 42500     |\n","| train/                |           |\n","|    entropy_loss       | -40.2     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 8499      |\n","|    policy_loss        | 3.93e+08  |\n","|    std                | 0.969     |\n","|    value_loss         | 1.27e+14  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 8600     |\n","|    time_elapsed       | 154      |\n","|    total_timesteps    | 43000    |\n","| train/                |          |\n","|    entropy_loss       | -40.2    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8599     |\n","|    policy_loss        | 5.49e+08 |\n","|    std                | 0.969    |\n","|    value_loss         | 2.29e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5024491.353811683\n","Sharpe:  0.8587005969507514\n","=================================\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 8700      |\n","|    time_elapsed       | 156       |\n","|    total_timesteps    | 43500     |\n","| train/                |           |\n","|    entropy_loss       | -40.2     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 8699      |\n","|    policy_loss        | 1.26e+08  |\n","|    std                | 0.968     |\n","|    value_loss         | 1.16e+13  |\n","-------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 278       |\n","|    iterations         | 8800      |\n","|    time_elapsed       | 157       |\n","|    total_timesteps    | 44000     |\n","| train/                |           |\n","|    entropy_loss       | -40.2     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 8799      |\n","|    policy_loss        | 2.09e+08  |\n","|    std                | 0.968     |\n","|    value_loss         | 3.37e+13  |\n","-------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 278      |\n","|    iterations         | 8900     |\n","|    time_elapsed       | 159      |\n","|    total_timesteps    | 44500    |\n","| train/                |          |\n","|    entropy_loss       | -40.2    |\n","|    explained_variance | 1.79e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8899     |\n","|    policy_loss        | 2.82e+08 |\n","|    std                | 0.967    |\n","|    value_loss         | 6.13e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9000     |\n","|    time_elapsed       | 161      |\n","|    total_timesteps    | 45000    |\n","| train/                |          |\n","|    entropy_loss       | -40.2    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 8999     |\n","|    policy_loss        | 3.66e+08 |\n","|    std                | 0.967    |\n","|    value_loss         | 1.12e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9100     |\n","|    time_elapsed       | 162      |\n","|    total_timesteps    | 45500    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9099     |\n","|    policy_loss        | 4.71e+08 |\n","|    std                | 0.966    |\n","|    value_loss         | 1.62e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9200     |\n","|    time_elapsed       | 164      |\n","|    total_timesteps    | 46000    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 5.96e-08 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9199     |\n","|    policy_loss        | 6.05e+08 |\n","|    std                | 0.965    |\n","|    value_loss         | 2.65e+14 |\n","------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4978938.794507206\n","Sharpe:  0.8562313075405302\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9300     |\n","|    time_elapsed       | 166      |\n","|    total_timesteps    | 46500    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9299     |\n","|    policy_loss        | 1.67e+08 |\n","|    std                | 0.965    |\n","|    value_loss         | 1.81e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9400     |\n","|    time_elapsed       | 168      |\n","|    total_timesteps    | 47000    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 1.19e-07 |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9399     |\n","|    policy_loss        | 2.07e+08 |\n","|    std                | 0.964    |\n","|    value_loss         | 3.23e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9500     |\n","|    time_elapsed       | 169      |\n","|    total_timesteps    | 47500    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9499     |\n","|    policy_loss        | 3.06e+08 |\n","|    std                | 0.964    |\n","|    value_loss         | 7.09e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9600     |\n","|    time_elapsed       | 171      |\n","|    total_timesteps    | 48000    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9599     |\n","|    policy_loss        | 3.58e+08 |\n","|    std                | 0.964    |\n","|    value_loss         | 1.03e+14 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9700     |\n","|    time_elapsed       | 173      |\n","|    total_timesteps    | 48500    |\n","| train/                |          |\n","|    entropy_loss       | -40.1    |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9699     |\n","|    policy_loss        | 5.14e+08 |\n","|    std                | 0.963    |\n","|    value_loss         | 1.97e+14 |\n","------------------------------------\n","-------------------------------------\n","| time/                 |           |\n","|    fps                | 279       |\n","|    iterations         | 9800      |\n","|    time_elapsed       | 175       |\n","|    total_timesteps    | 49000     |\n","| train/                |           |\n","|    entropy_loss       | -40.1     |\n","|    explained_variance | -1.19e-07 |\n","|    learning_rate      | 0.0002    |\n","|    n_updates          | 9799      |\n","|    policy_loss        | 6.15e+08  |\n","|    std                | 0.963     |\n","|    value_loss         | 2.97e+14  |\n","-------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5502789.002226646\n","Sharpe:  0.9013196220675852\n","=================================\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 9900     |\n","|    time_elapsed       | 176      |\n","|    total_timesteps    | 49500    |\n","| train/                |          |\n","|    entropy_loss       | -40      |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9899     |\n","|    policy_loss        | 1.7e+08  |\n","|    std                | 0.963    |\n","|    value_loss         | 2.21e+13 |\n","------------------------------------\n","------------------------------------\n","| time/                 |          |\n","|    fps                | 279      |\n","|    iterations         | 10000    |\n","|    time_elapsed       | 178      |\n","|    total_timesteps    | 50000    |\n","| train/                |          |\n","|    entropy_loss       | -40      |\n","|    explained_variance | 0        |\n","|    learning_rate      | 0.0002   |\n","|    n_updates          | 9999     |\n","|    policy_loss        | 2.23e+08 |\n","|    std                | 0.962    |\n","|    value_loss         | 3.96e+13 |\n","------------------------------------\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lvrqTro3lhAh"},"source":["### Model 2: **PPO**\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kVXta7jVKMhV","outputId":"15272479-a9fa-4468-c7b5-13ee6b39f479"},"source":["agent = DRLAgent(env = env_train)\n","PPO_PARAMS = {\n","    \"n_steps\": 2048,\n","    \"ent_coef\": 0.005,\n","    \"learning_rate\": 0.0001,\n","    \"batch_size\": 128,\n","}\n","model_ppo = agent.get_model(\"ppo\",model_kwargs = PPO_PARAMS)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'n_steps': 2048, 'ent_coef': 0.005, 'learning_rate': 0.0001, 'batch_size': 128}\n","Using cpu device\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z5XlUIszKUGx","outputId":"80f1c902-43f5-44ad-eb1e-8ae498cd8cd6"},"source":["trained_ppo = agent.train_model(model=model_ppo, \n","                             tb_log_name='ppo',\n","                             total_timesteps=80000)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Logging to tensorboard_log/ppo/ppo_1\n","-----------------------------\n","| time/              |      |\n","|    fps             | 348  |\n","|    iterations      | 1    |\n","|    time_elapsed    | 5    |\n","|    total_timesteps | 2048 |\n","-----------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5407408.522645024\n","Sharpe:  0.8945150154722756\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 314       |\n","|    iterations           | 2         |\n","|    time_elapsed         | 13        |\n","|    total_timesteps      | 4096      |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 8.62e+14  |\n","|    n_updates            | 10        |\n","|    policy_gradient_loss | -4.67e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 1.7e+15   |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5506664.127558984\n","Sharpe:  0.8978272251870139\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 307       |\n","|    iterations           | 3         |\n","|    time_elapsed         | 19        |\n","|    total_timesteps      | 6144      |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 5.96e-08  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.56e+15  |\n","|    n_updates            | 20        |\n","|    policy_gradient_loss | -5.11e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.29e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 308       |\n","|    iterations           | 4         |\n","|    time_elapsed         | 26        |\n","|    total_timesteps      | 8192      |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 2.09e+15  |\n","|    n_updates            | 30        |\n","|    policy_gradient_loss | -3.64e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 4.02e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4973206.12529279\n","Sharpe:  0.852165346616796\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 307       |\n","|    iterations           | 5         |\n","|    time_elapsed         | 33        |\n","|    total_timesteps      | 10240     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.04e+15  |\n","|    n_updates            | 40        |\n","|    policy_gradient_loss | -4.76e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.29e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4983200.930282411\n","Sharpe:  0.8548590279297212\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 305       |\n","|    iterations           | 6         |\n","|    time_elapsed         | 40        |\n","|    total_timesteps      | 12288     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 9.92e+14  |\n","|    n_updates            | 50        |\n","|    policy_gradient_loss | -5.26e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.31e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 306       |\n","|    iterations           | 7         |\n","|    time_elapsed         | 46        |\n","|    total_timesteps      | 14336     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.42e+15  |\n","|    n_updates            | 60        |\n","|    policy_gradient_loss | -4.58e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.17e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5004305.2400275655\n","Sharpe:  0.8580894170419451\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 304       |\n","|    iterations           | 8         |\n","|    time_elapsed         | 53        |\n","|    total_timesteps      | 16384     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.75e+15  |\n","|    n_updates            | 70        |\n","|    policy_gradient_loss | -3.64e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.36e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4767293.424762546\n","Sharpe:  0.8327081862255113\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 302       |\n","|    iterations           | 9         |\n","|    time_elapsed         | 60        |\n","|    total_timesteps      | 18432     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.79e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 7.95e+14  |\n","|    n_updates            | 80        |\n","|    policy_gradient_loss | -6.24e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 1.53e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5718116.186481766\n","Sharpe:  0.9168397946401206\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 302       |\n","|    iterations           | 10        |\n","|    time_elapsed         | 67        |\n","|    total_timesteps      | 20480     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.46e+15  |\n","|    n_updates            | 90        |\n","|    policy_gradient_loss | -4.56e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.72e+15  |\n","---------------------------------------\n","--------------------------------------\n","| time/                   |          |\n","|    fps                  | 302      |\n","|    iterations           | 11       |\n","|    time_elapsed         | 74       |\n","|    total_timesteps      | 22528    |\n","| train/                  |          |\n","|    approx_kl            | 0.0      |\n","|    clip_fraction        | 0        |\n","|    clip_range           | 0.2      |\n","|    entropy_loss         | -42.6    |\n","|    explained_variance   | 0        |\n","|    learning_rate        | 0.0001   |\n","|    loss                 | 2.14e+15 |\n","|    n_updates            | 100      |\n","|    policy_gradient_loss | -2.9e-07 |\n","|    std                  | 1        |\n","|    value_loss           | 4.48e+15 |\n","--------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5160448.888370996\n","Sharpe:  0.8687380292111129\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 300       |\n","|    iterations           | 12        |\n","|    time_elapsed         | 81        |\n","|    total_timesteps      | 24576     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.05e+15  |\n","|    n_updates            | 110       |\n","|    policy_gradient_loss | -4.37e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.13e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5037083.305754823\n","Sharpe:  0.8608949299257355\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 299       |\n","|    iterations           | 13        |\n","|    time_elapsed         | 89        |\n","|    total_timesteps      | 26624     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.57e+15  |\n","|    n_updates            | 120       |\n","|    policy_gradient_loss | -5.12e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.69e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 299       |\n","|    iterations           | 14        |\n","|    time_elapsed         | 95        |\n","|    total_timesteps      | 28672     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.75e+15  |\n","|    n_updates            | 130       |\n","|    policy_gradient_loss | -4.11e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.16e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5298096.091470836\n","Sharpe:  0.8835774791782369\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 298       |\n","|    iterations           | 15        |\n","|    time_elapsed         | 103       |\n","|    total_timesteps      | 30720     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.43e+15  |\n","|    n_updates            | 140       |\n","|    policy_gradient_loss | -4.82e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.08e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4961477.565456702\n","Sharpe:  0.8562661606561773\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 298       |\n","|    iterations           | 16        |\n","|    time_elapsed         | 109       |\n","|    total_timesteps      | 32768     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 5.96e-08  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1e+15     |\n","|    n_updates            | 150       |\n","|    policy_gradient_loss | -5.88e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.03e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5527273.862226817\n","Sharpe:  0.9011641451672711\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 297       |\n","|    iterations           | 17        |\n","|    time_elapsed         | 116       |\n","|    total_timesteps      | 34816     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.52e+15  |\n","|    n_updates            | 160       |\n","|    policy_gradient_loss | -3.48e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.22e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 296       |\n","|    iterations           | 18        |\n","|    time_elapsed         | 124       |\n","|    total_timesteps      | 36864     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 2.13e+15  |\n","|    n_updates            | 170       |\n","|    policy_gradient_loss | -3.79e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 4.35e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5181675.476854653\n","Sharpe:  0.8666935031584689\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 295       |\n","|    iterations           | 19        |\n","|    time_elapsed         | 131       |\n","|    total_timesteps      | 38912     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 8.44e+14  |\n","|    n_updates            | 180       |\n","|    policy_gradient_loss | -4.85e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 1.79e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4801715.467888956\n","Sharpe:  0.8392510886342651\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 295       |\n","|    iterations           | 20        |\n","|    time_elapsed         | 138       |\n","|    total_timesteps      | 40960     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.38e+15  |\n","|    n_updates            | 190       |\n","|    policy_gradient_loss | -5.06e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.86e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 295       |\n","|    iterations           | 21        |\n","|    time_elapsed         | 145       |\n","|    total_timesteps      | 43008     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.62e+15  |\n","|    n_updates            | 200       |\n","|    policy_gradient_loss | -4.68e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.1e+15   |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4968176.3422929365\n","Sharpe:  0.853754454109652\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 22        |\n","|    time_elapsed         | 153       |\n","|    total_timesteps      | 45056     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 5.96e-08  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.11e+15  |\n","|    n_updates            | 210       |\n","|    policy_gradient_loss | -5.42e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.32e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5333210.09190493\n","Sharpe:  0.8892998023531967\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 23        |\n","|    time_elapsed         | 160       |\n","|    total_timesteps      | 47104     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.03e+15  |\n","|    n_updates            | 220       |\n","|    policy_gradient_loss | -5.01e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.26e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 24        |\n","|    time_elapsed         | 167       |\n","|    total_timesteps      | 49152     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.94e+15  |\n","|    n_updates            | 230       |\n","|    policy_gradient_loss | -3.64e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.71e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5028653.28685496\n","Sharpe:  0.8567058309087507\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 25        |\n","|    time_elapsed         | 174       |\n","|    total_timesteps      | 51200     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.75e+15  |\n","|    n_updates            | 240       |\n","|    policy_gradient_loss | -3.74e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.8e+15   |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5396539.202192561\n","Sharpe:  0.8909163947432485\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 26        |\n","|    time_elapsed         | 181       |\n","|    total_timesteps      | 53248     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 8.89e+14  |\n","|    n_updates            | 250       |\n","|    policy_gradient_loss | -6.69e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 1.66e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4983470.113884904\n","Sharpe:  0.855726983366501\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 27        |\n","|    time_elapsed         | 188       |\n","|    total_timesteps      | 55296     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.57e+15  |\n","|    n_updates            | 260       |\n","|    policy_gradient_loss | -4.51e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.26e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 28        |\n","|    time_elapsed         | 194       |\n","|    total_timesteps      | 57344     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.62e+15  |\n","|    n_updates            | 270       |\n","|    policy_gradient_loss | -2.94e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.53e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5077533.069990031\n","Sharpe:  0.8698859623755926\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 29        |\n","|    time_elapsed         | 201       |\n","|    total_timesteps      | 59392     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.04e+15  |\n","|    n_updates            | 280       |\n","|    policy_gradient_loss | -3.94e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.26e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4718933.011698665\n","Sharpe:  0.8300365631029007\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 30        |\n","|    time_elapsed         | 208       |\n","|    total_timesteps      | 61440     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.46e+15  |\n","|    n_updates            | 290       |\n","|    policy_gradient_loss | -4.45e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.48e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 31        |\n","|    time_elapsed         | 215       |\n","|    total_timesteps      | 63488     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 5.96e-08  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.67e+15  |\n","|    n_updates            | 300       |\n","|    policy_gradient_loss | -4.25e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.25e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5400644.928048184\n","Sharpe:  0.8915105700881634\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 32        |\n","|    time_elapsed         | 222       |\n","|    total_timesteps      | 65536     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.81e+15  |\n","|    n_updates            | 310       |\n","|    policy_gradient_loss | -3.69e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.63e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5244251.123995519\n","Sharpe:  0.8820405593077815\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 33        |\n","|    time_elapsed         | 229       |\n","|    total_timesteps      | 67584     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.05e+15  |\n","|    n_updates            | 320       |\n","|    policy_gradient_loss | -5.81e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 1.94e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5323679.181851208\n","Sharpe:  0.8782748494629397\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 34        |\n","|    time_elapsed         | 236       |\n","|    total_timesteps      | 69632     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.91e+15  |\n","|    n_updates            | 330       |\n","|    policy_gradient_loss | -4.24e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.54e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 35        |\n","|    time_elapsed         | 243       |\n","|    total_timesteps      | 71680     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.97e+15  |\n","|    n_updates            | 340       |\n","|    policy_gradient_loss | -3.79e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 4.1e+15   |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5231003.911583127\n","Sharpe:  0.8742792085154348\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 294       |\n","|    iterations           | 36        |\n","|    time_elapsed         | 250       |\n","|    total_timesteps      | 73728     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.79e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.06e+15  |\n","|    n_updates            | 350       |\n","|    policy_gradient_loss | -5.38e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.07e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5431876.339119544\n","Sharpe:  0.8973709821852228\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 37        |\n","|    time_elapsed         | 258       |\n","|    total_timesteps      | 75776     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | -1.19e-07 |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.6e+15   |\n","|    n_updates            | 360       |\n","|    policy_gradient_loss | -4.84e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.03e+15  |\n","---------------------------------------\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 293       |\n","|    iterations           | 38        |\n","|    time_elapsed         | 265       |\n","|    total_timesteps      | 77824     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.85e+15  |\n","|    n_updates            | 370       |\n","|    policy_gradient_loss | -3.88e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 3.85e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5174445.4087701775\n","Sharpe:  0.8746583729733338\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 292       |\n","|    iterations           | 39        |\n","|    time_elapsed         | 272       |\n","|    total_timesteps      | 79872     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 1.19e-07  |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 1.42e+15  |\n","|    n_updates            | 380       |\n","|    policy_gradient_loss | -4.64e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2.86e+15  |\n","---------------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4789004.776252521\n","Sharpe:  0.8357083479334512\n","=================================\n","---------------------------------------\n","| time/                   |           |\n","|    fps                  | 292       |\n","|    iterations           | 40        |\n","|    time_elapsed         | 280       |\n","|    total_timesteps      | 81920     |\n","| train/                  |           |\n","|    approx_kl            | 0.0       |\n","|    clip_fraction        | 0         |\n","|    clip_range           | 0.2       |\n","|    entropy_loss         | -42.6     |\n","|    explained_variance   | 0         |\n","|    learning_rate        | 0.0001    |\n","|    loss                 | 8.65e+14  |\n","|    n_updates            | 390       |\n","|    policy_gradient_loss | -6.17e-07 |\n","|    std                  | 1         |\n","|    value_loss           | 2e+15     |\n","---------------------------------------\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"a3Iuv554xYFH"},"source":["### Model 3: **DDPG**\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ojmppgo4LPLz","outputId":"bb2459a2-3231-481e-9628-4ace4256f9e1"},"source":["agent = DRLAgent(env = env_train)\n","DDPG_PARAMS = {\"batch_size\": 128, \"buffer_size\": 50000, \"learning_rate\": 0.001}\n","\n","\n","model_ddpg = agent.get_model(\"ddpg\",model_kwargs = DDPG_PARAMS)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'batch_size': 128, 'buffer_size': 50000, 'learning_rate': 0.001}\n","Using cpu device\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bWt6BIR0LT25","outputId":"d523d157-f2c7-4667-9971-214ddc51fcb1"},"source":["trained_ddpg = agent.train_model(model=model_ddpg, \n","                             tb_log_name='ddpg',\n","                             total_timesteps=50000)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Logging to tensorboard_log/ddpg/ddpg_2\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4625995.900359718\n","Sharpe:  1.040202670783119\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 4         |\n","|    fps             | 22        |\n","|    time_elapsed    | 439       |\n","|    total timesteps | 10064     |\n","| train/             |           |\n","|    actor_loss      | -6.99e+07 |\n","|    critic_loss     | 7.27e+12  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 7548      |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 8         |\n","|    fps             | 20        |\n","|    time_elapsed    | 980       |\n","|    total timesteps | 20128     |\n","| train/             |           |\n","|    actor_loss      | -1.44e+08 |\n","|    critic_loss     | 1.81e+13  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 17612     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 12        |\n","|    fps             | 19        |\n","|    time_elapsed    | 1542      |\n","|    total timesteps | 30192     |\n","| train/             |           |\n","|    actor_loss      | -1.88e+08 |\n","|    critic_loss     | 2.72e+13  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 27676     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 16        |\n","|    fps             | 18        |\n","|    time_elapsed    | 2133      |\n","|    total timesteps | 40256     |\n","| train/             |           |\n","|    actor_loss      | -2.15e+08 |\n","|    critic_loss     | 3.45e+13  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 37740     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4450723.86820311\n","Sharpe:  1.008267759668747\n","=================================\n","---------------------------------\n","| time/              |          |\n","|    episodes        | 20       |\n","|    fps             | 17       |\n","|    time_elapsed    | 2874     |\n","|    total timesteps | 50320    |\n","| train/             |          |\n","|    actor_loss      | -2.3e+08 |\n","|    critic_loss     | 4.05e+13 |\n","|    learning_rate   | 0.001    |\n","|    n_updates       | 47804    |\n","---------------------------------\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"SPEXBcm-uBJo"},"source":["### Model 4: **SAC**\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HaWf2QeiLqyO","outputId":"f74b3a46-6195-43f3-d321-512a3318f767"},"source":["agent = DRLAgent(env = env_train)\n","SAC_PARAMS = {\n","    \"batch_size\": 128,\n","    \"buffer_size\": 100000,\n","    \"learning_rate\": 0.0003,\n","    \"learning_starts\": 100,\n","    \"ent_coef\": \"auto_0.1\",\n","}\n","\n","model_sac = agent.get_model(\"sac\",model_kwargs = SAC_PARAMS)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'batch_size': 128, 'buffer_size': 100000, 'learning_rate': 0.0003, 'learning_starts': 100, 'ent_coef': 'auto_0.1'}\n","Using cpu device\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZgYVPqtKLvi3","outputId":"d633cfb8-2379-485c-9c2b-5737f0fa2b23"},"source":["trained_sac = agent.train_model(model=model_sac, \n","                             tb_log_name='sac',\n","                             total_timesteps=50000)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Logging to tensorboard_log/sac/sac_1\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4449463.498168942\n","Sharpe:  1.01245667390232\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418643.239765096\n","Sharpe:  1.0135796594260282\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418644.1960784905\n","Sharpe:  1.0135797537524718\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418659.429680678\n","Sharpe:  1.013581852537709\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 4         |\n","|    fps             | 12        |\n","|    time_elapsed    | 783       |\n","|    total timesteps | 10064     |\n","| train/             |           |\n","|    actor_loss      | -8.83e+07 |\n","|    critic_loss     | 6.57e+12  |\n","|    ent_coef        | 2.24      |\n","|    ent_coef_loss   | -205      |\n","|    learning_rate   | 0.0003    |\n","|    n_updates       | 9963      |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418651.576406099\n","Sharpe:  1.013581224026754\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418670.948269031\n","Sharpe:  1.0135838030234754\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418682.278829884\n","Sharpe:  1.013585596968056\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418791.911955293\n","Sharpe:  1.0136007328171013\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 8         |\n","|    fps             | 12        |\n","|    time_elapsed    | 1585      |\n","|    total timesteps | 20128     |\n","| train/             |           |\n","|    actor_loss      | -1.51e+08 |\n","|    critic_loss     | 1.12e+13  |\n","|    ent_coef        | 41.7      |\n","|    ent_coef_loss   | -670      |\n","|    learning_rate   | 0.0003    |\n","|    n_updates       | 20027     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418737.365107464\n","Sharpe:  1.0135970410224868\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418754.895735274\n","Sharpe:  1.0135965589029627\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4419325.814567342\n","Sharpe:  1.0136807224228588\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4418142.473513333\n","Sharpe:  1.0135234795926031\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 12        |\n","|    fps             | 12        |\n","|    time_elapsed    | 2400      |\n","|    total timesteps | 30192     |\n","| train/             |           |\n","|    actor_loss      | -1.85e+08 |\n","|    critic_loss     | 1.87e+13  |\n","|    ent_coef        | 725       |\n","|    ent_coef_loss   | -673      |\n","|    learning_rate   | 0.0003    |\n","|    n_updates       | 30091     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4422046.188863339\n","Sharpe:  1.0140936726052256\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4424919.463828854\n","Sharpe:  1.014521127041106\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4427483.152494239\n","Sharpe:  1.0148626804754584\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4460697.650185859\n","Sharpe:  1.019852362102548\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 16        |\n","|    fps             | 12        |\n","|    time_elapsed    | 3210      |\n","|    total timesteps | 40256     |\n","| train/             |           |\n","|    actor_loss      | -1.93e+08 |\n","|    critic_loss     | 1.62e+13  |\n","|    ent_coef        | 1.01e+04  |\n","|    ent_coef_loss   | -238      |\n","|    learning_rate   | 0.0003    |\n","|    n_updates       | 40155     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4434035.982803257\n","Sharpe:  1.0161512551319891\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4454728.906041551\n","Sharpe:  1.018484863448905\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:4475667.120269234\n","Sharpe:  1.0215545521682856\n","=================================\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iidB5E27dfzh"},"source":["### Model 5: **TD3**\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XtRp1mWydkvs","outputId":"dda00a46-58c8-44af-ec89-a0561f8e1c5c"},"source":["agent = DRLAgent(env = env_train)\n","TD3_PARAMS = {\"batch_size\": 100, \n","              \"buffer_size\": 1000000, \n","              \"learning_rate\": 0.001}\n","\n","model_td3 = agent.get_model(\"td3\",model_kwargs = TD3_PARAMS)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'batch_size': 100, 'buffer_size': 1000000, 'learning_rate': 0.001}\n","Using cpu device\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"argM0DtodmNL","outputId":"d9e00099-54c5-4c4b-d39d-2486b69027cc"},"source":["trained_td3 = agent.train_model(model=model_td3, \n","                             tb_log_name='td3',\n","                             total_timesteps=30000)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Logging to tensorboard_log/td3/td3_1\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5232441.848437611\n","Sharpe:  0.8749907118878204\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 4         |\n","|    fps             | 25        |\n","|    time_elapsed    | 445       |\n","|    total timesteps | 11572     |\n","| train/             |           |\n","|    actor_loss      | -4.69e+07 |\n","|    critic_loss     | 1.08e+13  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 8679      |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","----------------------------------\n","| time/              |           |\n","|    episodes        | 8         |\n","|    fps             | 23        |\n","|    time_elapsed    | 985       |\n","|    total timesteps | 23144     |\n","| train/             |           |\n","|    actor_loss      | -1.05e+08 |\n","|    critic_loss     | 2.77e+13  |\n","|    learning_rate   | 0.001     |\n","|    n_updates       | 20251     |\n","----------------------------------\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n","=================================\n","begin_total_asset:1000000\n","end_total_asset:5140658.98428856\n","Sharpe:  0.8628057073557059\n","=================================\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"E2Ma6YpTlnuZ"},"source":["## Trading\n","Assume that we have $1,000,000 initial capital at 2019-01-01. We use the DDPG model to trade Dow jones 30 stocks."]},{"cell_type":"code","metadata":{"id":"uas8U6k455sI","executionInfo":{"status":"ok","timestamp":1628261353659,"user_tz":-180,"elapsed":25,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["trade = data_split(df,'2020-07-01', '2021-07-01')\n","e_trade_gym = StockPortfolioEnv(df = trade, **env_kwargs)\n"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LcGYlhyal205","executionInfo":{"status":"ok","timestamp":1628261353660,"user_tz":-180,"elapsed":23,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"b4b0d7a3-55c9-4695-9ea2-d79496cdf032"},"source":["trade.shape"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7308, 14)"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qq4W9FbSstT7","executionInfo":{"status":"ok","timestamp":1628261354347,"user_tz":-180,"elapsed":706,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"755746b9-e211-4984-bc87-a5b115174c48"},"source":["df_daily_return, df_actions = DRLAgent.DRL_prediction(model=trained_a2c,\n","                        environment = e_trade_gym)"],"execution_count":25,"outputs":[{"output_type":"stream","text":["=================================\n","begin_total_asset:1000000\n","end_total_asset:1407840.7152467805\n","Sharpe:  2.309637862947123\n","=================================\n","hit end!\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"uJvj3pXt_Ukg","executionInfo":{"status":"ok","timestamp":1628261354348,"user_tz":-180,"elapsed":31,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"f09d4553-21d0-4044-f4fe-3f689a7c8c42"},"source":["df_daily_return.head()"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>daily_return</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-07-01</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-07-02</td>\n","      <td>0.007085</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-07-06</td>\n","      <td>0.016621</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-07-07</td>\n","      <td>-0.016132</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-07-08</td>\n","      <td>0.003411</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date  daily_return\n","0  2020-07-01      0.000000\n","1  2020-07-02      0.007085\n","2  2020-07-06      0.016621\n","3  2020-07-07     -0.016132\n","4  2020-07-08      0.003411"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"vXMMG_9SdKTu","executionInfo":{"status":"ok","timestamp":1628261354349,"user_tz":-180,"elapsed":28,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["df_daily_return.to_csv('df_daily_return.csv')"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"tByVcZ2L9TAJ","executionInfo":{"status":"ok","timestamp":1628261354350,"user_tz":-180,"elapsed":27,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"cf47d03c-7268-4de5-8784-0d994f9bd825"},"source":["df_actions.head()"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AAPL</th>\n","      <th>AXP</th>\n","      <th>BA</th>\n","      <th>CAT</th>\n","      <th>CSCO</th>\n","      <th>CVX</th>\n","      <th>DD</th>\n","      <th>DIS</th>\n","      <th>GS</th>\n","      <th>HD</th>\n","      <th>IBM</th>\n","      <th>INTC</th>\n","      <th>JNJ</th>\n","      <th>JPM</th>\n","      <th>KO</th>\n","      <th>MCD</th>\n","      <th>MMM</th>\n","      <th>MRK</th>\n","      <th>MSFT</th>\n","      <th>NKE</th>\n","      <th>PFE</th>\n","      <th>PG</th>\n","      <th>RTX</th>\n","      <th>TRV</th>\n","      <th>UNH</th>\n","      <th>VZ</th>\n","      <th>WBA</th>\n","      <th>WMT</th>\n","      <th>XOM</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","      <td>0.034483</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>0.033552</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.064196</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.061714</td>\n","      <td>0.054163</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.048025</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.029368</td>\n","      <td>0.034528</td>\n","      <td>0.040312</td>\n","      <td>0.054404</td>\n","      <td>0.072561</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","      <td>0.026694</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-06</th>\n","      <td>0.058951</td>\n","      <td>0.064662</td>\n","      <td>0.062007</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.031613</td>\n","      <td>0.039280</td>\n","      <td>0.023788</td>\n","      <td>0.039542</td>\n","      <td>0.064662</td>\n","      <td>0.023788</td>\n","      <td>0.031162</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.036078</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.024454</td>\n","      <td>0.023788</td>\n","      <td>0.063961</td>\n","      <td>0.023788</td>\n","      <td>0.045566</td>\n","      <td>0.048380</td>\n","      <td>0.032866</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","      <td>0.023788</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-07</th>\n","      <td>0.023398</td>\n","      <td>0.063603</td>\n","      <td>0.023398</td>\n","      <td>0.063603</td>\n","      <td>0.023398</td>\n","      <td>0.031839</td>\n","      <td>0.023398</td>\n","      <td>0.063603</td>\n","      <td>0.023398</td>\n","      <td>0.063603</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","      <td>0.023539</td>\n","      <td>0.032426</td>\n","      <td>0.048558</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","      <td>0.057821</td>\n","      <td>0.028943</td>\n","      <td>0.043449</td>\n","      <td>0.063603</td>\n","      <td>0.023398</td>\n","      <td>0.029162</td>\n","      <td>0.035279</td>\n","      <td>0.023398</td>\n","      <td>0.023398</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-08</th>\n","      <td>0.057997</td>\n","      <td>0.057997</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.057997</td>\n","      <td>0.050618</td>\n","      <td>0.057997</td>\n","      <td>0.035164</td>\n","      <td>0.021336</td>\n","      <td>0.035484</td>\n","      <td>0.021336</td>\n","      <td>0.036006</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.057997</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.057997</td>\n","      <td>0.021336</td>\n","      <td>0.057997</td>\n","      <td>0.028357</td>\n","      <td>0.057997</td>\n","      <td>0.030146</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.021336</td>\n","      <td>0.021552</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                AAPL       AXP        BA  ...       WBA       WMT       XOM\n","date                                      ...                              \n","2020-07-01  0.034483  0.034483  0.034483  ...  0.034483  0.034483  0.034483\n","2020-07-02  0.033552  0.026694  0.026694  ...  0.026694  0.026694  0.026694\n","2020-07-06  0.058951  0.064662  0.062007  ...  0.023788  0.023788  0.023788\n","2020-07-07  0.023398  0.063603  0.023398  ...  0.035279  0.023398  0.023398\n","2020-07-08  0.057997  0.057997  0.021336  ...  0.021336  0.021336  0.021552\n","\n","[5 rows x 29 columns]"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"xBX3Y68o1vRG","executionInfo":{"status":"ok","timestamp":1628261354351,"user_tz":-180,"elapsed":26,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["df_actions.to_csv('df_actions.csv')"],"execution_count":29,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qFO42LcomPUT"},"source":["<a id='6'></a>\n","# Part 7: Backtest Our Strategy\n","Backtesting plays a key role in evaluating the performance of a trading strategy. Automated backtesting tool is preferred because it reduces the human error. We usually use the Quantopian pyfolio package to backtest our trading strategies. It is easy to use and consists of various individual plots that provide a comprehensive image of the performance of a trading strategy."]},{"cell_type":"markdown","metadata":{"id":"fAvxipWFmUe8"},"source":["<a id='6.1'></a>\n","## 7.1 BackTestStats\n","pass in df_account_value, this information is stored in env class\n"]},{"cell_type":"code","metadata":{"id":"1oGu3PCa8l6L","executionInfo":{"status":"ok","timestamp":1628261354353,"user_tz":-180,"elapsed":27,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["from pyfolio import timeseries\n","DRL_strat = convert_daily_return_to_pyfolio_ts(df_daily_return)\n","perf_func = timeseries.perf_stats \n","perf_stats_all = perf_func( returns=DRL_strat, \n","                              factor_returns=DRL_strat, \n","                                positions=None, transactions=None, turnover_denom=\"AGB\")"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hqvwr6SY8l9A","executionInfo":{"status":"ok","timestamp":1628261354354,"user_tz":-180,"elapsed":27,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"89439613-0c30-42a6-8697-b0fc03998ad9"},"source":["print(\"==============DRL Strategy Stats===========\")\n","perf_stats_all"],"execution_count":31,"outputs":[{"output_type":"stream","text":["==============DRL Strategy Stats===========\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["Annual return          0.407841\n","Cumulative returns     0.407841\n","Annual volatility      0.153258\n","Sharpe ratio           2.309638\n","Calmar ratio           4.919849\n","Stability              0.949370\n","Max drawdown          -0.082897\n","Omega ratio            1.479465\n","Sortino ratio          3.624702\n","Skew                   0.020514\n","Kurtosis               2.054992\n","Tail ratio             1.154161\n","Daily value at risk   -0.017904\n","Alpha                  0.000000\n","Beta                   1.000000\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XcWzfa6UloDM","executionInfo":{"status":"ok","timestamp":1628261354865,"user_tz":-180,"elapsed":532,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"50d14299-97f6-45d6-a7d7-b6526c3531c5"},"source":["#baseline stats\n","print(\"==============Get Baseline Stats===========\")\n","baseline_df = get_baseline(\n","        ticker=\"^DJI\", \n","        start = df_daily_return.loc[0,'date'],\n","        end = df_daily_return.loc[len(df_daily_return)-1,'date'])\n","\n","stats = backtest_stats(baseline_df, value_col_name = 'close')"],"execution_count":32,"outputs":[{"output_type":"stream","text":["==============Get Baseline Stats===========\n","[*********************100%***********************]  1 of 1 completed\n","Shape of DataFrame:  (251, 8)\n","Annual return          0.334042\n","Cumulative returns     0.332517\n","Annual volatility      0.146033\n","Sharpe ratio           2.055458\n","Calmar ratio           3.740347\n","Stability              0.945402\n","Max drawdown          -0.089308\n","Omega ratio            1.408111\n","Sortino ratio          3.075978\n","Skew                        NaN\n","Kurtosis                    NaN\n","Tail ratio             1.078766\n","Daily value at risk   -0.017207\n","dtype: float64\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lVVCMVSAmcrI"},"source":["<a id='6.2'></a>\n","## 7.2 BackTestPlot"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2fqSEF5PfjjT","executionInfo":{"status":"ok","timestamp":1628261363168,"user_tz":-180,"elapsed":8311,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"e9de10b7-3637-40c4-8819-d63c9b212298"},"source":["import pyfolio\n","%matplotlib inline\n","\n","baseline_df = get_baseline(\n","        ticker='^DJI', start=df_daily_return.loc[0,'date'], end='2021-07-01'\n","    )\n","\n","baseline_returns = get_daily_return(baseline_df, value_col_name=\"close\")\n","\n","with pyfolio.plotting.plotting_context(font_scale=1.1):\n","        pyfolio.create_full_tear_sheet(returns = DRL_strat,\n","                                       benchmark_rets=baseline_returns, set_context=False)"],"execution_count":33,"outputs":[{"output_type":"stream","text":["\r[*********************100%***********************]  1 of 1 completed\n","Shape of DataFrame:  (252, 8)\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\"><th>Start date</th><td colspan=2>2020-07-01</td></tr>\n","    <tr style=\"text-align: right;\"><th>End date</th><td colspan=2>2021-06-30</td></tr>\n","    <tr style=\"text-align: right;\"><th>Total months</th><td colspan=2>12</td></tr>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Backtest</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Annual return</th>\n","      <td>40.784%</td>\n","    </tr>\n","    <tr>\n","      <th>Cumulative returns</th>\n","      <td>40.784%</td>\n","    </tr>\n","    <tr>\n","      <th>Annual volatility</th>\n","      <td>15.326%</td>\n","    </tr>\n","    <tr>\n","      <th>Sharpe ratio</th>\n","      <td>2.31</td>\n","    </tr>\n","    <tr>\n","      <th>Calmar ratio</th>\n","      <td>4.92</td>\n","    </tr>\n","    <tr>\n","      <th>Stability</th>\n","      <td>0.95</td>\n","    </tr>\n","    <tr>\n","      <th>Max drawdown</th>\n","      <td>-8.29%</td>\n","    </tr>\n","    <tr>\n","      <th>Omega ratio</th>\n","      <td>1.48</td>\n","    </tr>\n","    <tr>\n","      <th>Sortino ratio</th>\n","      <td>3.62</td>\n","    </tr>\n","    <tr>\n","      <th>Skew</th>\n","      <td>0.02</td>\n","    </tr>\n","    <tr>\n","      <th>Kurtosis</th>\n","      <td>2.05</td>\n","    </tr>\n","    <tr>\n","      <th>Tail ratio</th>\n","      <td>1.15</td>\n","    </tr>\n","    <tr>\n","      <th>Daily value at risk</th>\n","      <td>-1.79%</td>\n","    </tr>\n","    <tr>\n","      <th>Alpha</th>\n","      <td>0.05</td>\n","    </tr>\n","    <tr>\n","      <th>Beta</th>\n","      <td>1.00</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Worst drawdown periods</th>\n","      <th>Net drawdown in %</th>\n","      <th>Peak date</th>\n","      <th>Valley date</th>\n","      <th>Recovery date</th>\n","      <th>Duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.29</td>\n","      <td>2020-09-02</td>\n","      <td>2020-10-28</td>\n","      <td>2020-11-09</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.14</td>\n","      <td>2021-06-04</td>\n","      <td>2021-06-18</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.29</td>\n","      <td>2021-05-07</td>\n","      <td>2021-05-12</td>\n","      <td>2021-06-02</td>\n","      <td>19</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.14</td>\n","      <td>2021-01-21</td>\n","      <td>2021-01-29</td>\n","      <td>2021-02-05</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.12</td>\n","      <td>2020-07-06</td>\n","      <td>2020-07-09</td>\n","      <td>2020-07-14</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/pyfolio/tears.py:907: UserWarning: Passed returns do not overlap with anyinteresting times.\n","  'interesting times.', UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1008x5184 with 13 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"-2DgsIW-fh0s"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"te3Ibcj5hUbz"},"source":["## Min-Variance Portfolio Allocation"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1VE2eUEuhMKs","executionInfo":{"status":"ok","timestamp":1628261380235,"user_tz":-180,"elapsed":11878,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"d4f2d130-7256-49e1-c987-970423b2db42"},"source":["!pip install PyPortfolioOpt"],"execution_count":34,"outputs":[{"output_type":"stream","text":["Collecting PyPortfolioOpt\n","  Downloading PyPortfolioOpt-1.4.2-py3-none-any.whl (60 kB)\n","\u001b[K     |████████████████████████████████| 60 kB 4.3 MB/s \n","\u001b[?25hCollecting cvxpy<2.0.0,>=1.1.10\n","  Downloading cvxpy-1.1.14-cp37-cp37m-manylinux_2_24_x86_64.whl (2.7 MB)\n","\u001b[K     |████████████████████████████████| 2.7 MB 15.8 MB/s \n","\u001b[?25hRequirement already satisfied: numpy<2.0,>=1.12 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.19.5)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.1.5)\n","Requirement already satisfied: scipy<2.0,>=1.3 in /usr/local/lib/python3.7/dist-packages (from PyPortfolioOpt) (1.4.1)\n","Requirement already satisfied: osqp>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (0.6.2.post0)\n","Requirement already satisfied: scs>=1.1.6 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (2.1.4)\n","Requirement already satisfied: ecos>=2 in /usr/local/lib/python3.7/dist-packages (from cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (2.0.7.post1)\n","Requirement already satisfied: qdldl in /usr/local/lib/python3.7/dist-packages (from osqp>=0.4.1->cvxpy<2.0.0,>=1.1.10->PyPortfolioOpt) (0.1.5.post0)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->PyPortfolioOpt) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.19->PyPortfolioOpt) (2018.9)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=0.19->PyPortfolioOpt) (1.15.0)\n","Installing collected packages: cvxpy, PyPortfolioOpt\n","  Attempting uninstall: cvxpy\n","    Found existing installation: cvxpy 1.0.31\n","    Uninstalling cvxpy-1.0.31:\n","      Successfully uninstalled cvxpy-1.0.31\n","Successfully installed PyPortfolioOpt-1.4.2 cvxpy-1.1.14\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"i0NiefM7hHn0","executionInfo":{"status":"ok","timestamp":1628261380236,"user_tz":-180,"elapsed":7,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["from pypfopt.efficient_frontier import EfficientFrontier\n","from pypfopt import risk_models"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"lDYDIBH9hcUP","executionInfo":{"status":"ok","timestamp":1628261380237,"user_tz":-180,"elapsed":7,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["unique_tic = trade.tic.unique()\n","unique_trade_date = trade.date.unique()"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"8qvk_pJ4iV32","executionInfo":{"status":"ok","timestamp":1628261380890,"user_tz":-180,"elapsed":659,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"726da492-bd93-4acc-af7a-e5cb2816f6d7"},"source":["df.head()"],"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tic</th>\n","      <th>day</th>\n","      <th>macd</th>\n","      <th>rsi_30</th>\n","      <th>cci_30</th>\n","      <th>dx_30</th>\n","      <th>cov_list</th>\n","      <th>return_list</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2008-12-31</td>\n","      <td>3.070357</td>\n","      <td>3.133571</td>\n","      <td>3.047857</td>\n","      <td>2.621168</td>\n","      <td>607541200</td>\n","      <td>AAPL</td>\n","      <td>2</td>\n","      <td>-0.083794</td>\n","      <td>42.254781</td>\n","      <td>-80.495083</td>\n","      <td>16.129793</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2008-12-31</td>\n","      <td>17.969999</td>\n","      <td>18.750000</td>\n","      <td>17.910000</td>\n","      <td>15.025569</td>\n","      <td>9625600</td>\n","      <td>AXP</td>\n","      <td>2</td>\n","      <td>-0.964124</td>\n","      <td>42.554845</td>\n","      <td>-75.362550</td>\n","      <td>25.776759</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2008-12-31</td>\n","      <td>41.590000</td>\n","      <td>43.049999</td>\n","      <td>41.500000</td>\n","      <td>32.005901</td>\n","      <td>5443100</td>\n","      <td>BA</td>\n","      <td>2</td>\n","      <td>-0.279798</td>\n","      <td>47.440267</td>\n","      <td>156.995097</td>\n","      <td>5.366299</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2008-12-31</td>\n","      <td>43.700001</td>\n","      <td>45.099998</td>\n","      <td>43.700001</td>\n","      <td>31.095800</td>\n","      <td>6277400</td>\n","      <td>CAT</td>\n","      <td>2</td>\n","      <td>0.688541</td>\n","      <td>51.205314</td>\n","      <td>98.432308</td>\n","      <td>26.331746</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2008-12-31</td>\n","      <td>16.180000</td>\n","      <td>16.549999</td>\n","      <td>16.120001</td>\n","      <td>12.019092</td>\n","      <td>37513700</td>\n","      <td>CSCO</td>\n","      <td>2</td>\n","      <td>-0.102729</td>\n","      <td>45.961924</td>\n","      <td>11.978197</td>\n","      <td>13.387087</td>\n","      <td>[[0.0013489695390742418, 0.0009909796896398577...</td>\n","      <td>tic             AAPL       AXP        BA  ... ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         date  ...                                        return_list\n","0  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","1  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","2  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","3  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","4  2008-12-31  ...  tic             AAPL       AXP        BA  ... ...\n","\n","[5 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"code","metadata":{"id":"EICNukJZgnWl","executionInfo":{"status":"ok","timestamp":1628261390200,"user_tz":-180,"elapsed":8757,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["#calculate_portfolio_minimum_variance\n","portfolio = pd.DataFrame(index = range(1), columns = unique_trade_date)\n","initial_capital = 1000000\n","portfolio.loc[0,unique_trade_date[0]] = initial_capital\n","\n","for i in range(len( unique_trade_date)-1):\n","    df_temp = df[df.date==unique_trade_date[i]].reset_index(drop=True)\n","    df_temp_next = df[df.date==unique_trade_date[i+1]].reset_index(drop=True)\n","    #Sigma = risk_models.sample_cov(df_temp.return_list[0])\n","    #calculate covariance matrix\n","    Sigma = df_temp.return_list[0].cov()\n","    #portfolio allocation\n","    ef_min_var = EfficientFrontier(None, Sigma,weight_bounds=(0, 0.1))\n","    #minimum variance\n","    raw_weights_min_var = ef_min_var.min_volatility()\n","    #get weights\n","    cleaned_weights_min_var = ef_min_var.clean_weights()\n","    \n","    #current capital\n","    cap = portfolio.iloc[0, i]\n","    #current cash invested for each stock\n","    current_cash = [element * cap for element in list(cleaned_weights_min_var.values())]\n","    # current held shares\n","    current_shares = list(np.array(current_cash)\n","                                      / np.array(df_temp.close))\n","    # next time period price\n","    next_price = np.array(df_temp_next.close)\n","    ##next_price * current share to calculate next total account value \n","    portfolio.iloc[0, i+1] = np.dot(current_shares, next_price)\n","    \n","portfolio=portfolio.T\n","portfolio.columns = ['account_value']"],"execution_count":38,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"S2zmv1ISkpXu","executionInfo":{"status":"ok","timestamp":1628261390208,"user_tz":-180,"elapsed":30,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"81ff71f8-40b0-4f44-97cb-80a84e2d75ab"},"source":["portfolio.head()"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>account_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-07-01</th>\n","      <td>1000000</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-02</th>\n","      <td>1.00666e+06</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-06</th>\n","      <td>1.01678e+06</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-07</th>\n","      <td>1.01512e+06</td>\n","    </tr>\n","    <tr>\n","      <th>2020-07-08</th>\n","      <td>1.01319e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           account_value\n","2020-07-01       1000000\n","2020-07-02   1.00666e+06\n","2020-07-06   1.01678e+06\n","2020-07-07   1.01512e+06\n","2020-07-08   1.01319e+06"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"5RmNa7m_f590","executionInfo":{"status":"ok","timestamp":1628261390209,"user_tz":-180,"elapsed":14,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["a2c_cumpod =(df_daily_return.daily_return+1).cumprod()-1"],"execution_count":40,"outputs":[]},{"cell_type":"code","metadata":{"id":"y821cLKkhCn6","executionInfo":{"status":"ok","timestamp":1628261390210,"user_tz":-180,"elapsed":13,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["min_var_cumpod =(portfolio.account_value.pct_change()+1).cumprod()-1"],"execution_count":41,"outputs":[]},{"cell_type":"code","metadata":{"id":"5E1X9FFGgqeZ","executionInfo":{"status":"ok","timestamp":1628261390211,"user_tz":-180,"elapsed":13,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["dji_cumpod =(baseline_returns+1).cumprod()-1"],"execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"id":"j9g4VpoqlMqR"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ih6Jim-blNKY"},"source":["## Plotly: DRL, Min-Variance, DJIA"]},{"cell_type":"code","metadata":{"id":"CJRH-FX3hTRZ","executionInfo":{"status":"ok","timestamp":1628261390878,"user_tz":-180,"elapsed":679,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["from datetime import datetime as dt\n","\n","import matplotlib.pyplot as plt\n","import plotly\n","import plotly.graph_objs as go"],"execution_count":43,"outputs":[]},{"cell_type":"code","metadata":{"id":"mpfgJcG5PInj","executionInfo":{"status":"ok","timestamp":1628261390879,"user_tz":-180,"elapsed":8,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["time_ind = pd.Series(df_daily_return.date)"],"execution_count":44,"outputs":[]},{"cell_type":"code","metadata":{"id":"CM-NJKa8g7Jp","executionInfo":{"status":"ok","timestamp":1628261390879,"user_tz":-180,"elapsed":7,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["trace0_portfolio = go.Scatter(x = time_ind, y = a2c_cumpod, mode = 'lines', name = 'A2C (Portfolio Allocation)')\n","\n","trace1_portfolio = go.Scatter(x = time_ind, y = dji_cumpod, mode = 'lines', name = 'DJIA')\n","trace2_portfolio = go.Scatter(x = time_ind, y = min_var_cumpod, mode = 'lines', name = 'Min-Variance')\n","#trace3_portfolio = go.Scatter(x = time_ind, y = ddpg_cumpod, mode = 'lines', name = 'DDPG')\n","#trace4_portfolio = go.Scatter(x = time_ind, y = addpg_cumpod, mode = 'lines', name = 'Adaptive-DDPG')\n","#trace5_portfolio = go.Scatter(x = time_ind, y = min_cumpod, mode = 'lines', name = 'Min-Variance')\n","\n","#trace4 = go.Scatter(x = time_ind, y = addpg_cumpod, mode = 'lines', name = 'Adaptive-DDPG')\n","\n","#trace2 = go.Scatter(x = time_ind, y = portfolio_cost_minv, mode = 'lines', name = 'Min-Variance')\n","#trace3 = go.Scatter(x = time_ind, y = spx_value, mode = 'lines', name = 'SPX')"],"execution_count":45,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"id":"35nVVmEuhGa1","executionInfo":{"status":"ok","timestamp":1628261391230,"user_tz":-180,"elapsed":357,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"8dc43927-757f-4f87-b48c-7229a91b1c2b"},"source":["fig = go.Figure()\n","fig.add_trace(trace0_portfolio)\n","\n","fig.add_trace(trace1_portfolio)\n","\n","fig.add_trace(trace2_portfolio)\n","\n","\n","\n","fig.update_layout(\n","    legend=dict(\n","        x=0,\n","        y=1,\n","        traceorder=\"normal\",\n","        font=dict(\n","            family=\"sans-serif\",\n","            size=15,\n","            color=\"black\"\n","        ),\n","        bgcolor=\"White\",\n","        bordercolor=\"white\",\n","        borderwidth=2\n","        \n","    ),\n",")\n","#fig.update_layout(legend_orientation=\"h\")\n","fig.update_layout(title={\n","        #'text': \"Cumulative Return using FinRL\",\n","        'y':0.85,\n","        'x':0.5,\n","        'xanchor': 'center',\n","        'yanchor': 'top'})\n","#with Transaction cost\n","#fig.update_layout(title =  'Quarterly Trade Date')\n","fig.update_layout(\n","#    margin=dict(l=20, r=20, t=20, b=20),\n","\n","    paper_bgcolor='rgba(1,1,0,0)',\n","    plot_bgcolor='rgba(1, 1, 0, 0)',\n","    #xaxis_title=\"Date\",\n","    yaxis_title=\"Cumulative Return\",\n","xaxis={'type': 'date', \n","       'tick0': time_ind[0], \n","        'tickmode': 'linear', \n","       'dtick': 86400000.0 *80}\n","\n",")\n","fig.update_xaxes(showline=True,linecolor='black',showgrid=True, gridwidth=1, gridcolor='LightSteelBlue',mirror=True)\n","fig.update_yaxes(showline=True,linecolor='black',showgrid=True, gridwidth=1, gridcolor='LightSteelBlue',mirror=True)\n","fig.update_yaxes(zeroline=True, zerolinewidth=1, zerolinecolor='LightSteelBlue')\n","\n","fig.show()"],"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>\n","            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n","                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n","            <div id=\"f7be2f76-aec7-4fac-b416-481433fd89fd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n","            <script type=\"text/javascript\">\n","                \n","                    window.PLOTLYENV=window.PLOTLYENV || {};\n","                    \n","                if (document.getElementById(\"f7be2f76-aec7-4fac-b416-481433fd89fd\")) {\n","                    Plotly.newPlot(\n","                        'f7be2f76-aec7-4fac-b416-481433fd89fd',\n","                        [{\"mode\": \"lines\", \"name\": \"A2C (Portfolio Allocation)\", \"type\": \"scatter\", \"x\": [\"2020-07-01\", \"2020-07-02\", \"2020-07-06\", \"2020-07-07\", \"2020-07-08\", \"2020-07-09\", \"2020-07-10\", \"2020-07-13\", \"2020-07-14\", \"2020-07-15\", \"2020-07-16\", \"2020-07-17\", \"2020-07-20\", \"2020-07-21\", \"2020-07-22\", \"2020-07-23\", \"2020-07-24\", \"2020-07-27\", \"2020-07-28\", \"2020-07-29\", \"2020-07-30\", \"2020-07-31\", \"2020-08-03\", \"2020-08-04\", \"2020-08-05\", \"2020-08-06\", \"2020-08-07\", \"2020-08-10\", \"2020-08-11\", \"2020-08-12\", \"2020-08-13\", \"2020-08-14\", \"2020-08-17\", \"2020-08-18\", \"2020-08-19\", \"2020-08-20\", \"2020-08-21\", \"2020-08-24\", \"2020-08-25\", \"2020-08-26\", \"2020-08-27\", \"2020-08-28\", \"2020-08-31\", \"2020-09-01\", \"2020-09-02\", \"2020-09-03\", \"2020-09-04\", \"2020-09-08\", \"2020-09-09\", \"2020-09-10\", \"2020-09-11\", \"2020-09-14\", \"2020-09-15\", \"2020-09-16\", \"2020-09-17\", \"2020-09-18\", \"2020-09-21\", \"2020-09-22\", \"2020-09-23\", \"2020-09-24\", \"2020-09-25\", \"2020-09-28\", \"2020-09-29\", \"2020-09-30\", \"2020-10-01\", \"2020-10-02\", \"2020-10-05\", \"2020-10-06\", \"2020-10-07\", \"2020-10-08\", \"2020-10-09\", \"2020-10-12\", \"2020-10-13\", \"2020-10-14\", \"2020-10-15\", \"2020-10-16\", \"2020-10-19\", \"2020-10-20\", \"2020-10-21\", \"2020-10-22\", \"2020-10-23\", \"2020-10-26\", \"2020-10-27\", \"2020-10-28\", \"2020-10-29\", \"2020-10-30\", \"2020-11-02\", \"2020-11-03\", \"2020-11-04\", \"2020-11-05\", \"2020-11-06\", \"2020-11-09\", \"2020-11-10\", \"2020-11-11\", \"2020-11-12\", \"2020-11-13\", \"2020-11-16\", \"2020-11-17\", \"2020-11-18\", \"2020-11-19\", \"2020-11-20\", \"2020-11-23\", \"2020-11-24\", \"2020-11-25\", \"2020-11-27\", \"2020-11-30\", \"2020-12-01\", \"2020-12-02\", \"2020-12-03\", \"2020-12-04\", \"2020-12-07\", \"2020-12-08\", \"2020-12-09\", \"2020-12-10\", \"2020-12-11\", \"2020-12-14\", \"2020-12-15\", \"2020-12-16\", \"2020-12-17\", \"2020-12-18\", \"2020-12-21\", \"2020-12-22\", \"2020-12-23\", \"2020-12-24\", \"2020-12-28\", \"2020-12-29\", \"2020-12-30\", \"2020-12-31\", \"2021-01-04\", \"2021-01-05\", \"2021-01-06\", \"2021-01-07\", \"2021-01-08\", \"2021-01-11\", \"2021-01-12\", \"2021-01-13\", \"2021-01-14\", \"2021-01-15\", \"2021-01-19\", \"2021-01-20\", \"2021-01-21\", \"2021-01-22\", \"2021-01-25\", \"2021-01-26\", \"2021-01-27\", \"2021-01-28\", \"2021-01-29\", \"2021-02-01\", \"2021-02-02\", \"2021-02-03\", \"2021-02-04\", \"2021-02-05\", \"2021-02-08\", \"2021-02-09\", \"2021-02-10\", \"2021-02-11\", \"2021-02-12\", \"2021-02-16\", \"2021-02-17\", \"2021-02-18\", \"2021-02-19\", \"2021-02-22\", \"2021-02-23\", \"2021-02-24\", \"2021-02-25\", \"2021-02-26\", \"2021-03-01\", \"2021-03-02\", \"2021-03-03\", \"2021-03-04\", \"2021-03-05\", \"2021-03-08\", \"2021-03-09\", \"2021-03-10\", \"2021-03-11\", \"2021-03-12\", \"2021-03-15\", \"2021-03-16\", \"2021-03-17\", \"2021-03-18\", \"2021-03-19\", \"2021-03-22\", \"2021-03-23\", \"2021-03-24\", \"2021-03-25\", \"2021-03-26\", \"2021-03-29\", \"2021-03-30\", \"2021-03-31\", \"2021-04-01\", \"2021-04-05\", \"2021-04-06\", \"2021-04-07\", \"2021-04-08\", \"2021-04-09\", \"2021-04-12\", \"2021-04-13\", \"2021-04-14\", \"2021-04-15\", \"2021-04-16\", \"2021-04-19\", \"2021-04-20\", \"2021-04-21\", \"2021-04-22\", \"2021-04-23\", \"2021-04-26\", \"2021-04-27\", \"2021-04-28\", \"2021-04-29\", \"2021-04-30\", \"2021-05-03\", \"2021-05-04\", \"2021-05-05\", \"2021-05-06\", \"2021-05-07\", \"2021-05-10\", \"2021-05-11\", \"2021-05-12\", \"2021-05-13\", \"2021-05-14\", \"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-24\", \"2021-05-25\", \"2021-05-26\", \"2021-05-27\", \"2021-05-28\", \"2021-06-01\", \"2021-06-02\", \"2021-06-03\", \"2021-06-04\", \"2021-06-07\", \"2021-06-08\", \"2021-06-09\", \"2021-06-10\", \"2021-06-11\", \"2021-06-14\", \"2021-06-15\", \"2021-06-16\", \"2021-06-17\", \"2021-06-18\", \"2021-06-21\", \"2021-06-22\", \"2021-06-23\", \"2021-06-24\", \"2021-06-25\", \"2021-06-28\", \"2021-06-29\", \"2021-06-30\"], \"y\": [0.0, 0.007084731340728068, 0.023823395585238494, 0.007307527116287016, 0.010743091155274609, -0.008119192622083826, 0.009568906165651425, 0.011321829667784167, 0.03179336809747624, 0.041959257091646274, 0.039948651986743355, 0.03925488837220903, 0.03391790005035644, 0.04636824493238256, 0.05245930280966915, 0.043226712263394695, 0.027466311255417653, 0.02864881139953024, 0.02668724087963481, 0.03255730437585802, 0.021585206246532485, 0.020459982819901912, 0.02760669935251059, 0.03434209723149273, 0.049179981124292116, 0.05289914270539087, 0.0578639181358116, 0.07315665263487303, 0.07079452794267405, 0.08134113619312511, 0.07551893039807211, 0.0788938772689356, 0.07350382509168862, 0.07016789595260708, 0.0643807919908852, 0.06310890190498375, 0.06328879821006272, 0.07872043269882312, 0.07492462176439596, 0.07418768482893023, 0.08209262191965339, 0.08884782914651534, 0.0802032866118092, 0.08094590847424188, 0.10170124213025122, 0.07546362499524051, 0.07460300148281562, 0.05039716738671385, 0.06191608031417273, 0.048679771787335735, 0.05791717848563538, 0.06981824836983597, 0.06748164846555627, 0.07455428662961494, 0.07113497084643727, 0.05865981483679983, 0.03791030451020139, 0.039198650082550746, 0.02168538090583061, 0.023912567165112586, 0.03539587333594385, 0.05466357385743903, 0.04566994481433362, 0.05772344302321164, 0.05597248932072585, 0.054714112734375986, 0.07097625872713675, 0.056722265430595664, 0.07391469420215535, 0.0880134072948322, 0.09089922207914336, 0.09844212813040154, 0.08794686244145744, 0.08321390078228497, 0.08718102219461965, 0.09346348451000397, 0.07904981187231308, 0.0826704459978076, 0.07723107133889417, 0.089752211807266, 0.08733222252876183, 0.06344371646375802, 0.04832565403780875, 0.010373523969326337, 0.01841215955755815, 0.015925194343703097, 0.035842370437519255, 0.05588362438756911, 0.05401291815360354, 0.07331079077303992, 0.07115689969136318, 0.12101345892665627, 0.13232244895287515, 0.12892348408593302, 0.11568176061995805, 0.1364751863366389, 0.15607672952860252, 0.1522550150379216, 0.13911234778496295, 0.14079382836472676, 0.13535772420341208, 0.1517531406696242, 0.17519183649614178, 0.1710184563592163, 0.17209628814915123, 0.164765015968662, 0.17436224564168445, 0.1866738620331776, 0.1902170187963994, 0.20203459561784154, 0.19419355411425476, 0.20158173901524723, 0.19910128167510233, 0.19836609581704612, 0.20118962971470267, 0.1862372272508679, 0.19968752465699713, 0.19745322539921406, 0.2017802934170565, 0.1962845720419928, 0.19522124521077, 0.18551421891686837, 0.1914946120547123, 0.19422898980093817, 0.19928719208463885, 0.19895395942178684, 0.19999788946303498, 0.20799166263235902, 0.19336589180357677, 0.2040964915565988, 0.22059428636827483, 0.2336930604777938, 0.2343750657326853, 0.23933500728043522, 0.24727256000068, 0.24831297649894024, 0.24922803516345993, 0.23928136194077387, 0.24320270376578246, 0.2508472160110238, 0.2511190237121985, 0.23895880802779113, 0.23791972757887137, 0.23693939703726818, 0.2182250270770254, 0.23416957627068236, 0.21178643388944685, 0.21346656886420612, 0.23097470254518715, 0.23211195736555812, 0.24679980630391496, 0.25121690210604286, 0.26097560210347104, 0.2583104838570116, 0.25672616656089153, 0.2558342432356919, 0.25957244814156044, 0.26242979726916715, 0.26657595678435797, 0.26208982796779834, 0.26292910564547456, 0.26437127088596335, 0.26671618275946374, 0.28320132030254164, 0.26366582854250487, 0.24694915515968874, 0.27311053421589593, 0.2668441900680827, 0.26960431171751487, 0.2563805234568748, 0.27860911587851445, 0.2931998103338955, 0.2927793032565189, 0.3145566246274336, 0.31734236658254367, 0.3298398248169807, 0.339069781823786, 0.3344222993367447, 0.3399204126615074, 0.32721461303313926, 0.32003402675790205, 0.3273890413989484, 0.3151120215539793, 0.31857286222679626, 0.3287931838878746, 0.34928234946814074, 0.3520795249752231, 0.3470432937676682, 0.3426899342915768, 0.3468949579251155, 0.36018877065941557, 0.3530518544166752, 0.35457760805918803, 0.352822896551529, 0.3610446128618523, 0.3591059475702243, 0.35748858951501883, 0.3614515272061618, 0.3708659719283005, 0.3776490833981967, 0.37510172430490685, 0.3652591034865207, 0.3790789666423098, 0.3636830408706595, 0.3708248211092451, 0.3681047712926322, 0.36821901738088614, 0.367712554014507, 0.3775776881153552, 0.3724617477027583, 0.38761212614328966, 0.38826025749305626, 0.3939319945478341, 0.40378518802969054, 0.4151288251454037, 0.4119632668284756, 0.39131166798991757, 0.3685456345346869, 0.38553153698871934, 0.3994354492566199, 0.4043411912875381, 0.3951963842887356, 0.3873203255389912, 0.3948396976638575, 0.3981103929576226, 0.40585812386261266, 0.3999491369243875, 0.39945223656508966, 0.4083752785264363, 0.40719740092913614, 0.41144516713977786, 0.4155088952110273, 0.4180804967744036, 0.4241779031919075, 0.4183926773305455, 0.41761761196085234, 0.41466963824239267, 0.4184356295403273, 0.42007933719313995, 0.4145209552995832, 0.4155018173823366, 0.40255045472915074, 0.3902977997010424, 0.36520150828621967, 0.38990310521961224, 0.39314883023182046, 0.38930589789787917, 0.399594166172645, 0.4073443569782613, 0.4022912366970577, 0.39997692663119055, 0.40784071524677956]}, {\"mode\": \"lines\", \"name\": \"DJIA\", \"type\": \"scatter\", \"x\": [\"2020-07-01\", \"2020-07-02\", \"2020-07-06\", \"2020-07-07\", \"2020-07-08\", \"2020-07-09\", \"2020-07-10\", \"2020-07-13\", \"2020-07-14\", \"2020-07-15\", \"2020-07-16\", \"2020-07-17\", \"2020-07-20\", \"2020-07-21\", \"2020-07-22\", \"2020-07-23\", \"2020-07-24\", \"2020-07-27\", \"2020-07-28\", \"2020-07-29\", \"2020-07-30\", \"2020-07-31\", \"2020-08-03\", \"2020-08-04\", \"2020-08-05\", \"2020-08-06\", \"2020-08-07\", \"2020-08-10\", \"2020-08-11\", \"2020-08-12\", \"2020-08-13\", \"2020-08-14\", \"2020-08-17\", \"2020-08-18\", \"2020-08-19\", \"2020-08-20\", \"2020-08-21\", \"2020-08-24\", \"2020-08-25\", \"2020-08-26\", \"2020-08-27\", \"2020-08-28\", \"2020-08-31\", \"2020-09-01\", \"2020-09-02\", \"2020-09-03\", \"2020-09-04\", \"2020-09-08\", \"2020-09-09\", \"2020-09-10\", \"2020-09-11\", \"2020-09-14\", \"2020-09-15\", \"2020-09-16\", \"2020-09-17\", \"2020-09-18\", \"2020-09-21\", \"2020-09-22\", \"2020-09-23\", \"2020-09-24\", \"2020-09-25\", \"2020-09-28\", \"2020-09-29\", \"2020-09-30\", \"2020-10-01\", \"2020-10-02\", \"2020-10-05\", \"2020-10-06\", \"2020-10-07\", \"2020-10-08\", \"2020-10-09\", \"2020-10-12\", \"2020-10-13\", \"2020-10-14\", \"2020-10-15\", \"2020-10-16\", \"2020-10-19\", \"2020-10-20\", \"2020-10-21\", \"2020-10-22\", \"2020-10-23\", \"2020-10-26\", \"2020-10-27\", \"2020-10-28\", \"2020-10-29\", \"2020-10-30\", \"2020-11-02\", \"2020-11-03\", \"2020-11-04\", \"2020-11-05\", \"2020-11-06\", \"2020-11-09\", \"2020-11-10\", \"2020-11-11\", \"2020-11-12\", \"2020-11-13\", \"2020-11-16\", \"2020-11-17\", \"2020-11-18\", \"2020-11-19\", \"2020-11-20\", \"2020-11-23\", \"2020-11-24\", \"2020-11-25\", \"2020-11-27\", \"2020-11-30\", \"2020-12-01\", \"2020-12-02\", \"2020-12-03\", \"2020-12-04\", \"2020-12-07\", \"2020-12-08\", \"2020-12-09\", \"2020-12-10\", \"2020-12-11\", \"2020-12-14\", \"2020-12-15\", \"2020-12-16\", \"2020-12-17\", \"2020-12-18\", \"2020-12-21\", \"2020-12-22\", \"2020-12-23\", \"2020-12-24\", \"2020-12-28\", \"2020-12-29\", \"2020-12-30\", \"2020-12-31\", \"2021-01-04\", \"2021-01-05\", \"2021-01-06\", \"2021-01-07\", \"2021-01-08\", \"2021-01-11\", \"2021-01-12\", \"2021-01-13\", \"2021-01-14\", \"2021-01-15\", \"2021-01-19\", \"2021-01-20\", \"2021-01-21\", \"2021-01-22\", \"2021-01-25\", \"2021-01-26\", \"2021-01-27\", \"2021-01-28\", \"2021-01-29\", \"2021-02-01\", \"2021-02-02\", \"2021-02-03\", \"2021-02-04\", \"2021-02-05\", \"2021-02-08\", \"2021-02-09\", \"2021-02-10\", \"2021-02-11\", \"2021-02-12\", \"2021-02-16\", \"2021-02-17\", \"2021-02-18\", \"2021-02-19\", \"2021-02-22\", \"2021-02-23\", \"2021-02-24\", \"2021-02-25\", \"2021-02-26\", \"2021-03-01\", \"2021-03-02\", \"2021-03-03\", \"2021-03-04\", \"2021-03-05\", \"2021-03-08\", \"2021-03-09\", \"2021-03-10\", \"2021-03-11\", \"2021-03-12\", \"2021-03-15\", \"2021-03-16\", \"2021-03-17\", \"2021-03-18\", \"2021-03-19\", \"2021-03-22\", \"2021-03-23\", \"2021-03-24\", \"2021-03-25\", \"2021-03-26\", \"2021-03-29\", \"2021-03-30\", \"2021-03-31\", \"2021-04-01\", \"2021-04-05\", \"2021-04-06\", \"2021-04-07\", \"2021-04-08\", \"2021-04-09\", \"2021-04-12\", \"2021-04-13\", \"2021-04-14\", \"2021-04-15\", \"2021-04-16\", \"2021-04-19\", \"2021-04-20\", \"2021-04-21\", \"2021-04-22\", \"2021-04-23\", \"2021-04-26\", \"2021-04-27\", \"2021-04-28\", \"2021-04-29\", \"2021-04-30\", \"2021-05-03\", \"2021-05-04\", \"2021-05-05\", \"2021-05-06\", \"2021-05-07\", \"2021-05-10\", \"2021-05-11\", \"2021-05-12\", \"2021-05-13\", \"2021-05-14\", \"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-24\", \"2021-05-25\", \"2021-05-26\", \"2021-05-27\", \"2021-05-28\", \"2021-06-01\", \"2021-06-02\", \"2021-06-03\", \"2021-06-04\", \"2021-06-07\", \"2021-06-08\", \"2021-06-09\", \"2021-06-10\", \"2021-06-11\", \"2021-06-14\", \"2021-06-15\", \"2021-06-16\", \"2021-06-17\", \"2021-06-18\", \"2021-06-21\", \"2021-06-22\", \"2021-06-23\", \"2021-06-24\", \"2021-06-25\", \"2021-06-28\", \"2021-06-29\", \"2021-06-30\"], \"y\": [null, 0.0035900049368924325, 0.021451689225469472, 0.006031053470604952, 0.01291272477375105, -0.0011222417817438046, 0.013224420655107982, 0.013632425782493796, 0.035267929817957455, 0.044108420380372326, 0.03884753730275681, 0.03640876558337114, 0.036755372617740756, 0.04295437909186228, 0.049382964343949176, 0.03564641225290388, 0.028557247270763586, 0.03302116944014255, 0.025036305701787942, 0.031264834868348634, 0.022486121868004583, 0.02694192339961754, 0.03611543600425149, 0.04249081969489921, 0.05698661347016465, 0.06419318617776382, 0.06600006602761543, 0.07990950421988563, 0.07584774335445332, 0.08711372421934693, 0.08400048420251371, 0.08533325541568781, 0.08198724908083133, 0.07939001108429133, 0.07607975073436779, 0.07790021557637017, 0.08530646490044091, 0.0999997343716621, 0.09766744166896602, 0.10091129493435425, 0.10714210091524179, 0.11342147893510401, 0.10472442767528567, 0.11310249724790111, 0.13077649614212827, 0.0993884856186924, 0.09319380509179198, 0.06861946501693783, 0.08570050556662157, 0.0699285573611117, 0.07502125975377805, 0.08775449566475624, 0.08784268427301933, 0.08927191651984412, 0.08420486623526124, 0.07470182270370973, 0.05489528361706886, 0.06035402185969452, 0.039951868145128966, 0.04198445618859026, 0.055915751798398805, 0.07185125116639313, 0.06674534325063086, 0.0795310217849392, 0.08089885593874802, 0.0756884422453794, 0.09378949561352767, 0.07918365581246056, 0.09980544621576404, 0.10454797456494846, 0.11081923194704446, 0.1205576980800005, 0.1144295005314464, 0.10798649545528893, 0.1072170840004083, 0.11157346463974527, 0.09560722827833734, 0.10001248453189238, 0.0962056509772653, 0.10214464525525124, 0.10105314046692104, 0.07578831850052015, 0.06715448678517966, 0.030502405644070807, 0.03590983967052974, 0.029789383290687255, 0.04624369274997808, 0.0678088432227395, 0.08209410756657487, 0.10317513141962009, 0.10058024613121797, 0.13300967152779153, 0.14322725528894464, 0.1423222974878009, 0.12998651746449386, 0.1455156054751312, 0.16380312993665513, 0.15731041441435978, 0.14390726383458796, 0.14564849553801307, 0.13710953108629464, 0.14984663758162853, 0.16752572136118582, 0.1607734490056203, 0.16224609251227862, 0.15168736607114064, 0.158886880654326, 0.16121325363977235, 0.16454453657531465, 0.1742099928621872, 0.16844077303917926, 0.17248553369097053, 0.16840275023991946, 0.16570017163385353, 0.16753073035270516, 0.16034912670889145, 0.1734736711088578, 0.17173395728165053, 0.17751714156586385, 0.17268642460841632, 0.17413963929948495, 0.16633160814052195, 0.17077382467998437, 0.17349537673877458, 0.18142627997758098, 0.1787722734104895, 0.18164348806437003, 0.18929532976050556, 0.17442879471900485, 0.18094556857935506, 0.197957469867311, 0.20618481433148372, 0.2083934760162276, 0.2049242181324733, 0.2072556760032498, 0.20693631484699226, 0.20425703564087194, 0.1973691410452323, 0.20188672013891606, 0.21190660052268084, 0.21142588912445515, 0.2044692347361421, 0.2030322613206057, 0.20214005367969268, 0.17750940039715246, 0.18917405145069144, 0.16505355636500552, 0.17396326208295898, 0.19244279788605412, 0.19384630213098464, 0.20675712955946324, 0.21034683092111206, 0.21957627726437767, 0.21919043312977404, 0.2215984678557461, 0.22132251795932234, 0.22239891987928395, 0.2248993932669292, 0.22840705341899747, 0.22375658426243206, 0.22379468295550264, 0.22485818292761173, 0.22546669950338916, 0.24196214340818667, 0.2202077137710463, 0.20195859157783658, 0.2253952075335237, 0.2198000881127149, 0.2150816181015851, 0.20163885095252465, 0.22387163927975307, 0.23576746288128625, 0.2369448794635527, 0.2549856731458482, 0.2623130688003963, 0.27370032797510424, 0.2804934312009326, 0.2755386278626675, 0.2828991132187668, 0.27695116347109483, 0.26784565172102526, 0.27185686730839964, 0.2598868195598085, 0.2597667555509684, 0.26751574132505307, 0.2851337305868378, 0.2889609036827854, 0.2849037723398178, 0.2815849359892628, 0.288255243029059, 0.30278723815212283, 0.2990198693791626, 0.299642502203767, 0.30186937840312633, 0.3134113091644435, 0.31126624649323187, 0.30861891858149937, 0.310702507265884, 0.32255787946620873, 0.32895709381347826, 0.32417593551454704, 0.314215631772337, 0.3264949468003362, 0.31400570949139395, 0.3228493117000557, 0.3204433261069779, 0.3205738634617219, 0.3141798098935933, 0.32350488243858977, 0.31629648827952916, 0.3255593278995894, 0.32632873935447004, 0.33010992080101365, 0.3424740851095964, 0.351381438119412, 0.3500236978424527, 0.3316183861864157, 0.3051369105375141, 0.3219929259378862, 0.33600808420873673, 0.3338965666019418, 0.32351657008546764, 0.31711978434014676, 0.324429269055323, 0.3292356240994725, 0.3364686078532637, 0.3333009519740169, 0.333712448216704, 0.33921429414391957, 0.3417326025771259, 0.34351458925700307, 0.3444887622136854, 0.3435818311734584, 0.3505510080405694, 0.345649026794689, 0.34446705658376864, 0.33853428559827603, 0.33927637528123333, 0.33979564073539503, 0.336459652383577, 0.3327906419895401, 0.32246786940648287, 0.3142991149643233, 0.2935735777215227, 0.3163787571705412, 0.3190447549597544, 0.31627265762290624, 0.32880743121838685, 0.3380174487460623, 0.33216664307633925, 0.3325171206950648, 0.34068587513722437]}, {\"mode\": \"lines\", \"name\": \"Min-Variance\", \"type\": \"scatter\", \"x\": [\"2020-07-01\", \"2020-07-02\", \"2020-07-06\", \"2020-07-07\", \"2020-07-08\", \"2020-07-09\", \"2020-07-10\", \"2020-07-13\", \"2020-07-14\", \"2020-07-15\", \"2020-07-16\", \"2020-07-17\", \"2020-07-20\", \"2020-07-21\", \"2020-07-22\", \"2020-07-23\", \"2020-07-24\", \"2020-07-27\", \"2020-07-28\", \"2020-07-29\", \"2020-07-30\", \"2020-07-31\", \"2020-08-03\", \"2020-08-04\", \"2020-08-05\", \"2020-08-06\", \"2020-08-07\", \"2020-08-10\", \"2020-08-11\", \"2020-08-12\", \"2020-08-13\", \"2020-08-14\", \"2020-08-17\", \"2020-08-18\", \"2020-08-19\", \"2020-08-20\", \"2020-08-21\", \"2020-08-24\", \"2020-08-25\", \"2020-08-26\", \"2020-08-27\", \"2020-08-28\", \"2020-08-31\", \"2020-09-01\", \"2020-09-02\", \"2020-09-03\", \"2020-09-04\", \"2020-09-08\", \"2020-09-09\", \"2020-09-10\", \"2020-09-11\", \"2020-09-14\", \"2020-09-15\", \"2020-09-16\", \"2020-09-17\", \"2020-09-18\", \"2020-09-21\", \"2020-09-22\", \"2020-09-23\", \"2020-09-24\", \"2020-09-25\", \"2020-09-28\", \"2020-09-29\", \"2020-09-30\", \"2020-10-01\", \"2020-10-02\", \"2020-10-05\", \"2020-10-06\", \"2020-10-07\", \"2020-10-08\", \"2020-10-09\", \"2020-10-12\", \"2020-10-13\", \"2020-10-14\", \"2020-10-15\", \"2020-10-16\", \"2020-10-19\", \"2020-10-20\", \"2020-10-21\", \"2020-10-22\", \"2020-10-23\", \"2020-10-26\", \"2020-10-27\", \"2020-10-28\", \"2020-10-29\", \"2020-10-30\", \"2020-11-02\", \"2020-11-03\", \"2020-11-04\", \"2020-11-05\", \"2020-11-06\", \"2020-11-09\", \"2020-11-10\", \"2020-11-11\", \"2020-11-12\", \"2020-11-13\", \"2020-11-16\", \"2020-11-17\", \"2020-11-18\", \"2020-11-19\", \"2020-11-20\", \"2020-11-23\", \"2020-11-24\", \"2020-11-25\", \"2020-11-27\", \"2020-11-30\", \"2020-12-01\", \"2020-12-02\", \"2020-12-03\", \"2020-12-04\", \"2020-12-07\", \"2020-12-08\", \"2020-12-09\", \"2020-12-10\", \"2020-12-11\", \"2020-12-14\", \"2020-12-15\", \"2020-12-16\", \"2020-12-17\", \"2020-12-18\", \"2020-12-21\", \"2020-12-22\", \"2020-12-23\", \"2020-12-24\", \"2020-12-28\", \"2020-12-29\", \"2020-12-30\", \"2020-12-31\", \"2021-01-04\", \"2021-01-05\", \"2021-01-06\", \"2021-01-07\", \"2021-01-08\", \"2021-01-11\", \"2021-01-12\", \"2021-01-13\", \"2021-01-14\", \"2021-01-15\", \"2021-01-19\", \"2021-01-20\", \"2021-01-21\", \"2021-01-22\", \"2021-01-25\", \"2021-01-26\", \"2021-01-27\", \"2021-01-28\", \"2021-01-29\", \"2021-02-01\", \"2021-02-02\", \"2021-02-03\", \"2021-02-04\", \"2021-02-05\", \"2021-02-08\", \"2021-02-09\", \"2021-02-10\", \"2021-02-11\", \"2021-02-12\", \"2021-02-16\", \"2021-02-17\", \"2021-02-18\", \"2021-02-19\", \"2021-02-22\", \"2021-02-23\", \"2021-02-24\", \"2021-02-25\", \"2021-02-26\", \"2021-03-01\", \"2021-03-02\", \"2021-03-03\", \"2021-03-04\", \"2021-03-05\", \"2021-03-08\", \"2021-03-09\", \"2021-03-10\", \"2021-03-11\", \"2021-03-12\", \"2021-03-15\", \"2021-03-16\", \"2021-03-17\", \"2021-03-18\", \"2021-03-19\", \"2021-03-22\", \"2021-03-23\", \"2021-03-24\", \"2021-03-25\", \"2021-03-26\", \"2021-03-29\", \"2021-03-30\", \"2021-03-31\", \"2021-04-01\", \"2021-04-05\", \"2021-04-06\", \"2021-04-07\", \"2021-04-08\", \"2021-04-09\", \"2021-04-12\", \"2021-04-13\", \"2021-04-14\", \"2021-04-15\", \"2021-04-16\", \"2021-04-19\", \"2021-04-20\", \"2021-04-21\", \"2021-04-22\", \"2021-04-23\", \"2021-04-26\", \"2021-04-27\", \"2021-04-28\", \"2021-04-29\", \"2021-04-30\", \"2021-05-03\", \"2021-05-04\", \"2021-05-05\", \"2021-05-06\", \"2021-05-07\", \"2021-05-10\", \"2021-05-11\", \"2021-05-12\", \"2021-05-13\", \"2021-05-14\", \"2021-05-17\", \"2021-05-18\", \"2021-05-19\", \"2021-05-20\", \"2021-05-21\", \"2021-05-24\", \"2021-05-25\", \"2021-05-26\", \"2021-05-27\", \"2021-05-28\", \"2021-06-01\", \"2021-06-02\", \"2021-06-03\", \"2021-06-04\", \"2021-06-07\", \"2021-06-08\", \"2021-06-09\", \"2021-06-10\", \"2021-06-11\", \"2021-06-14\", \"2021-06-15\", \"2021-06-16\", \"2021-06-17\", \"2021-06-18\", \"2021-06-21\", \"2021-06-22\", \"2021-06-23\", \"2021-06-24\", \"2021-06-25\", \"2021-06-28\", \"2021-06-29\", \"2021-06-30\"], \"y\": [null, 0.006660609374528059, 0.016783799796482812, 0.015117640139131971, 0.013186800538559362, 0.00028583177513530345, 0.011943457068829266, 0.018052516748036762, 0.03391415589614888, 0.03992304650366463, 0.041898807166259155, 0.046796230469555056, 0.04042498681222306, 0.046298153317579915, 0.05980239388335429, 0.056786599933008386, 0.0554860946599669, 0.059345711375350385, 0.059426174398761855, 0.06004420253058784, 0.05652597050027053, 0.05400432866692717, 0.05616146943191214, 0.06373582496838837, 0.06829431767613592, 0.06899796462974273, 0.07734385807852928, 0.08477417769537232, 0.08021406231304451, 0.09178488493220471, 0.09253982326290244, 0.0947175097038846, 0.09860205780498443, 0.10177607352259277, 0.09636124198506857, 0.09614666819161743, 0.10023375690030045, 0.10746864617281782, 0.10517625285905297, 0.10424258918600748, 0.10952092566580784, 0.1191824132628716, 0.1128311235172812, 0.1137128968923724, 0.13548766390525757, 0.1169758723461507, 0.11326896563167632, 0.09782729810478097, 0.10889657573170797, 0.09640077154664817, 0.10708735415287896, 0.11673763824775629, 0.11828509558741285, 0.12126364168862214, 0.12194605098310962, 0.1169799882381033, 0.09521393535385259, 0.10069524247975026, 0.09141850897241088, 0.09440306688615596, 0.09852955085481496, 0.1049749630419583, 0.09923714664127004, 0.10979529096388818, 0.10763279656549707, 0.10533792702420341, 0.11660374315772337, 0.10661527151042827, 0.11805538516825531, 0.12541731802648215, 0.1298776358579521, 0.13441471762256652, 0.1296803042205994, 0.1254003146455238, 0.12581219737647675, 0.13271136228815283, 0.11851925254388362, 0.122594848206387, 0.11953727652918866, 0.12629299124254145, 0.13130766763121726, 0.11754719790006773, 0.10915645620361603, 0.07413967295214885, 0.07209905215306223, 0.07036002625659332, 0.08631591154983154, 0.09908017308239647, 0.10174410368646591, 0.11061616460800128, 0.11501786220888799, 0.13217509475145706, 0.14790394951144714, 0.15111539857518208, 0.14032432466340938, 0.1560647954533827, 0.15899385692380275, 0.15639416904424408, 0.14591753384506756, 0.14948119613177568, 0.14845251343068955, 0.1504174860537293, 0.1565147482618905, 0.15638703445425883, 0.156576001012511, 0.15766060550758088, 0.16511404074654856, 0.16844244082138227, 0.17012234489504285, 0.17505198994521254, 0.17269997248032865, 0.18271829178120358, 0.18214402249073314, 0.17421440701617308, 0.17419995752346562, 0.1613053920672416, 0.16889517348707606, 0.16079106046768366, 0.16920241425655114, 0.16890462146985175, 0.1634861482733856, 0.15584895084437256, 0.15708044968884693, 0.1592137448221156, 0.1649784272212782, 0.16448025810411315, 0.16196783920665325, 0.17048984340600115, 0.16084463802121474, 0.16301752194987684, 0.16796511313586615, 0.16912347010507234, 0.16970568830154553, 0.170888504381417, 0.16389816987585148, 0.15967646068492503, 0.15451800656192471, 0.15216860513171615, 0.15138006139900484, 0.15597401407859168, 0.1526426075700742, 0.15106043397573155, 0.1597110806018478, 0.1649745435238439, 0.14418523059289856, 0.15005229082792493, 0.13142799630912894, 0.13065466681046178, 0.13367425179502823, 0.13209011902700385, 0.13756348948118702, 0.1478828799386509, 0.14665893052056367, 0.14927618562608025, 0.14726684376868682, 0.14448689603042375, 0.1460864359390115, 0.14222122527562586, 0.15341183490660693, 0.15049231831494736, 0.13703045678257397, 0.13403327236082574, 0.13027793574319135, 0.13230748658216762, 0.12710430944507345, 0.10577226836815723, 0.11441110712808866, 0.11262086790271009, 0.10966089897548792, 0.1002714512089149, 0.11792675438022515, 0.12795653379902383, 0.12470662733875693, 0.14167029420959842, 0.13754142413637216, 0.14336255137233023, 0.1598987505673315, 0.1615045315935688, 0.16375356802001106, 0.15935779653182292, 0.15344624222812664, 0.16212717166605306, 0.16104171943962386, 0.1627942152031383, 0.1653942597279776, 0.1816457338387103, 0.19132364106847843, 0.18112291683746684, 0.18070004036136167, 0.1826403369912568, 0.19798873941421857, 0.1975974173237931, 0.19825365936607975, 0.19587038077327112, 0.20253108577375145, 0.20358525916859893, 0.2003376747178327, 0.19956209358088173, 0.20842299000222697, 0.21916936080182547, 0.21811554542223233, 0.2226585726053214, 0.22803685441077293, 0.21562529363324123, 0.21777709118002786, 0.20774129757848692, 0.20363289509574312, 0.20035382711809957, 0.20614998202787094, 0.20683714929457575, 0.22081975115893715, 0.22089402273903147, 0.22371978423703687, 0.23047030760993903, 0.23457648301151957, 0.242481170335618, 0.22819431947546254, 0.21221710520707693, 0.22731845991666844, 0.23268071631544918, 0.23235641407943897, 0.22832472350415411, 0.224568969771334, 0.23143559798548075, 0.22896882006255304, 0.23230645224178303, 0.22829260170499466, 0.22654051270564168, 0.22309179792246647, 0.22394507141294495, 0.2150017180844075, 0.21872160101470728, 0.2232771530496338, 0.22891640271361546, 0.22270864809392532, 0.21779122910192195, 0.2219316808854881, 0.23431473215151488, 0.2337186660334165, 0.23021484659005909, 0.2266124518078232, 0.21755467289098607, 0.21820666214165563, 0.20022169517657495, 0.21427566666327835, 0.21733992125534285, 0.21003509736501713, 0.21572983979365645, 0.2321151458977675, 0.23215400445363898, 0.23165796870302358, 0.23985952930864318]}],\n","                        {\"legend\": {\"bgcolor\": \"White\", \"bordercolor\": \"white\", \"borderwidth\": 2, \"font\": {\"color\": \"black\", \"family\": \"sans-serif\", \"size\": 15}, \"traceorder\": \"normal\", \"x\": 0, \"y\": 1}, \"paper_bgcolor\": \"rgba(1,1,0,0)\", \"plot_bgcolor\": \"rgba(1, 1, 0, 0)\", \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"x\": 0.5, \"xanchor\": \"center\", \"y\": 0.85, \"yanchor\": \"top\"}, \"xaxis\": {\"dtick\": 6912000000.0, \"gridcolor\": \"LightSteelBlue\", \"gridwidth\": 1, \"linecolor\": \"black\", \"mirror\": true, \"showgrid\": true, \"showline\": true, \"tick0\": \"2020-07-01\", \"tickmode\": \"linear\", \"type\": \"date\"}, \"yaxis\": {\"gridcolor\": \"LightSteelBlue\", \"gridwidth\": 1, \"linecolor\": \"black\", \"mirror\": true, \"showgrid\": true, \"showline\": true, \"title\": {\"text\": \"Cumulative Return\"}, \"zeroline\": true, \"zerolinecolor\": \"LightSteelBlue\", \"zerolinewidth\": 1}},\n","                        {\"responsive\": true}\n","                    ).then(function(){\n","                            \n","var gd = document.getElementById('f7be2f76-aec7-4fac-b416-481433fd89fd');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })\n","                };\n","                \n","            </script>\n","        </div>\n","</body>\n","</html>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"nXd-N5Rmh6H7"},"source":[""],"execution_count":null,"outputs":[]}]}